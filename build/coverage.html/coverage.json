{"/home/travis/build/npmtest/node-npmtest-memcached/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-memcached/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":2,"37":2,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":1,"46":1,"47":1,"48":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":127,"loc":{"start":{"line":127,"column":77},"end":{"line":130,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":138,"loc":{"start":{"line":138,"column":83},"end":{"line":141,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":149,"loc":{"start":{"line":149,"column":79},"end":{"line":152,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":160,"loc":{"start":{"line":160,"column":75},"end":{"line":163,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":175,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":174,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":125,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":25},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":45},"skip":true},"35":{"start":{"line":127,"column":8},"end":{"line":136,"column":10},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":147,"column":10},"skip":true},"39":{"start":{"line":145,"column":12},"end":{"line":145,"column":25},"skip":true},"40":{"start":{"line":146,"column":12},"end":{"line":146,"column":48},"skip":true},"41":{"start":{"line":149,"column":8},"end":{"line":158,"column":10},"skip":true},"42":{"start":{"line":156,"column":12},"end":{"line":156,"column":25},"skip":true},"43":{"start":{"line":157,"column":12},"end":{"line":157,"column":46},"skip":true},"44":{"start":{"line":160,"column":8},"end":{"line":169,"column":10},"skip":true},"45":{"start":{"line":167,"column":12},"end":{"line":167,"column":94},"skip":true},"46":{"start":{"line":168,"column":12},"end":{"line":168,"column":48},"skip":true},"47":{"start":{"line":172,"column":8},"end":{"line":172,"column":35},"skip":true},"48":{"start":{"line":173,"column":8},"end":{"line":173,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":173,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":125,"column":9},"skip":true}]},"12":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":42},"end":{"line":127,"column":73},"skip":true},{"start":{"line":127,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":45},"end":{"line":138,"column":79},"skip":true},{"start":{"line":138,"column":83},"end":{"line":147,"column":9},"skip":true}]},"14":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":43},"end":{"line":149,"column":75},"skip":true},{"start":{"line":149,"column":79},"end":{"line":158,"column":9},"skip":true}]},"15":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":41},"end":{"line":160,"column":71},"skip":true},{"start":{"line":160,"column":75},"end":{"line":169,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_memcached */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"127":1,"134":2,"135":2,"138":1,"145":2,"146":2,"149":1,"156":2,"157":2,"160":1,"167":1,"168":1,"172":1,"173":1}},"/home/travis/build/npmtest/node-npmtest-memcached/lib.npmtest_memcached.js":{"path":"/home/travis/build/npmtest/node-npmtest-memcached/lib.npmtest_memcached.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_memcached */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_memcached = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_memcached = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-memcached/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-memcached/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":53},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":67},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-memcached && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_memcached */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_memcached","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught.stack);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_memcached.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_memcached.rollup.js'] =","            local.assetsDict['/assets.npmtest_memcached.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_memcached.__dirname +","                    '/lib.npmtest_memcached.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-memcached/memcached/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-memcached/memcached/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}}},"branchMap":{},"code":["module.exports = require('./lib/memcached.js');"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-memcached/memcached/lib/memcached.js":{"path":"/home/travis/build/npmtest/node-npmtest-memcached/memcached/lib/memcached.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":1,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":1,"241":1,"242":1,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":1,"256":0,"257":0,"258":0,"259":0,"260":0,"261":1,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":1,"303":0,"304":0,"305":0,"306":1,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":0,"314":0,"315":0,"316":1,"317":0,"318":0,"319":0,"320":1,"321":0,"322":0,"323":0,"324":0,"325":1,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":1,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":1,"360":1,"361":1,"362":1,"363":0,"364":1,"365":0,"366":1,"367":0,"368":1,"369":0,"370":0,"371":0,"372":1,"373":1,"374":1,"375":0,"376":0,"377":0,"378":1,"379":1,"380":0,"381":1,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":1,"395":1,"396":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"403":1,"404":1,"405":0,"406":0,"407":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0,0],"54":[0,0],"55":[0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"fnMap":{"1":{"name":"Client","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":32}}},"2":{"name":"(anonymous_2)","line":102,"loc":{"start":{"line":102,"column":1},"end":{"line":102,"column":23}}},"3":{"name":"connect","line":120,"loc":{"start":{"line":120,"column":22},"end":{"line":120,"column":57}}},"4":{"name":"factory","line":161,"loc":{"start":{"line":161,"column":20},"end":{"line":161,"column":39}}},"5":{"name":"(anonymous_5)","line":166,"loc":{"start":{"line":166,"column":24},"end":{"line":166,"column":35}}},"6":{"name":"(anonymous_6)","line":169,"loc":{"start":{"line":169,"column":24},"end":{"line":169,"column":36}}},"7":{"name":"streamClose","line":188,"loc":{"start":{"line":188,"column":17},"end":{"line":188,"column":40}}},"8":{"name":"streamConnect","line":192,"loc":{"start":{"line":192,"column":19},"end":{"line":192,"column":44}}},"9":{"name":"err","line":209,"loc":{"start":{"line":209,"column":24},"end":{"line":209,"column":40}}},"10":{"name":"buffer","line":221,"loc":{"start":{"line":221,"column":21},"end":{"line":221,"column":39}}},"11":{"name":"memcachedMulti","line":227,"loc":{"start":{"line":227,"column":20},"end":{"line":227,"column":60}}},"12":{"name":"fetchMultipleServers","line":236,"loc":{"start":{"line":236,"column":19},"end":{"line":236,"column":54}}},"13":{"name":"memcachedCommand","line":264,"loc":{"start":{"line":264,"column":22},"end":{"line":264,"column":71}}},"14":{"name":"allocateMemcachedConnection","line":309,"loc":{"start":{"line":309,"column":25},"end":{"line":309,"column":72}}},"15":{"name":"errors","line":311,"loc":{"start":{"line":311,"column":47},"end":{"line":311,"column":69}}},"16":{"name":"each","line":354,"loc":{"start":{"line":354,"column":25},"end":{"line":354,"column":47}}},"17":{"name":"allocateMemcachedConnection","line":359,"loc":{"start":{"line":359,"column":34},"end":{"line":359,"column":81}}},"18":{"name":"connectionIssue","line":369,"loc":{"start":{"line":369,"column":30},"end":{"line":369,"column":65}}},"19":{"name":"issue","line":393,"loc":{"start":{"line":393,"column":17},"end":{"line":393,"column":41}}},"20":{"name":"failure","line":396,"loc":{"start":{"line":396,"column":19},"end":{"line":396,"column":45}}},"21":{"name":"reconnect","line":399,"loc":{"start":{"line":399,"column":24},"end":{"line":399,"column":52}}},"22":{"name":"reconnected","line":402,"loc":{"start":{"line":402,"column":23},"end":{"line":402,"column":53}}},"23":{"name":"remove","line":405,"loc":{"start":{"line":405,"column":18},"end":{"line":405,"column":43}}},"24":{"name":"endMemcached","line":428,"loc":{"start":{"line":428,"column":18},"end":{"line":428,"column":42}}},"25":{"name":"closeConnection","line":431,"loc":{"start":{"line":431,"column":42},"end":{"line":431,"column":72}}},"26":{"name":"notfound","line":440,"loc":{"start":{"line":440,"column":17},"end":{"line":440,"column":57}}},"27":{"name":"notstored","line":444,"loc":{"start":{"line":444,"column":18},"end":{"line":444,"column":59}}},"28":{"name":"error","line":451,"loc":{"start":{"line":451,"column":13},"end":{"line":451,"column":50}}},"29":{"name":"clienterror","line":456,"loc":{"start":{"line":456,"column":20},"end":{"line":456,"column":63}}},"30":{"name":"servererror","line":461,"loc":{"start":{"line":461,"column":20},"end":{"line":461,"column":84}}},"31":{"name":"stored","line":467,"loc":{"start":{"line":467,"column":14},"end":{"line":467,"column":47}}},"32":{"name":"touched","line":471,"loc":{"start":{"line":471,"column":15},"end":{"line":471,"column":49}}},"33":{"name":"deleted","line":475,"loc":{"start":{"line":475,"column":15},"end":{"line":475,"column":49}}},"34":{"name":"ok","line":479,"loc":{"start":{"line":479,"column":10},"end":{"line":479,"column":39}}},"35":{"name":"exists","line":483,"loc":{"start":{"line":483,"column":14},"end":{"line":483,"column":47}}},"36":{"name":"end","line":487,"loc":{"start":{"line":487,"column":11},"end":{"line":487,"column":53}}},"37":{"name":"value","line":493,"loc":{"start":{"line":493,"column":13},"end":{"line":493,"column":57}}},"38":{"name":"incrdecr","line":538,"loc":{"start":{"line":538,"column":16},"end":{"line":538,"column":42}}},"39":{"name":"stat","line":542,"loc":{"start":{"line":542,"column":12},"end":{"line":542,"column":55}}},"40":{"name":"version","line":547,"loc":{"start":{"line":547,"column":15},"end":{"line":547,"column":49}}},"41":{"name":"item","line":559,"loc":{"start":{"line":559,"column":12},"end":{"line":559,"column":55}}},"42":{"name":"(anonymous_42)","line":570,"loc":{"start":{"line":570,"column":14},"end":{"line":570,"column":25}}},"43":{"name":"resultSetIsEmpty","line":575,"loc":{"start":{"line":575,"column":2},"end":{"line":575,"column":39}}},"44":{"name":"stats","line":582,"loc":{"start":{"line":582,"column":13},"end":{"line":582,"column":39}}},"45":{"name":"each","line":590,"loc":{"start":{"line":590,"column":24},"end":{"line":590,"column":47}}},"46":{"name":"settings","line":598,"loc":{"start":{"line":598,"column":22},"end":{"line":598,"column":42}}},"47":{"name":"slabs","line":603,"loc":{"start":{"line":603,"column":19},"end":{"line":603,"column":45}}},"48":{"name":"each","line":611,"loc":{"start":{"line":611,"column":24},"end":{"line":611,"column":47}}},"49":{"name":"items","line":623,"loc":{"start":{"line":623,"column":19},"end":{"line":623,"column":45}}},"50":{"name":"each","line":631,"loc":{"start":{"line":631,"column":24},"end":{"line":631,"column":47}}},"51":{"name":"BufferBuffer","line":657,"loc":{"start":{"line":657,"column":20},"end":{"line":657,"column":59}}},"52":{"name":"each","line":668,"loc":{"start":{"line":668,"column":23},"end":{"line":668,"column":43}}},"53":{"name":"(anonymous_53)","line":682,"loc":{"start":{"line":682,"column":31},"end":{"line":682,"column":41}}},"54":{"name":"(anonymous_54)","line":690,"loc":{"start":{"line":690,"column":27},"end":{"line":690,"column":39}}},"55":{"name":"rawDataReceived","line":700,"loc":{"start":{"line":700,"column":30},"end":{"line":700,"column":58}}},"56":{"name":"errorResponse","line":803,"loc":{"start":{"line":803,"column":27},"end":{"line":803,"column":67}}},"57":{"name":"touch","line":812,"loc":{"start":{"line":812,"column":20},"end":{"line":812,"column":60}}},"58":{"name":"touchCommand","line":814,"loc":{"start":{"line":814,"column":17},"end":{"line":814,"column":41}}},"59":{"name":"get","line":826,"loc":{"start":{"line":826,"column":18},"end":{"line":826,"column":46}}},"60":{"name":"getCommand","line":830,"loc":{"start":{"line":830,"column":17},"end":{"line":830,"column":46}}},"61":{"name":"get","line":843,"loc":{"start":{"line":843,"column":19},"end":{"line":843,"column":47}}},"62":{"name":"getCommand","line":845,"loc":{"start":{"line":845,"column":17},"end":{"line":845,"column":46}}},"63":{"name":"getMulti","line":857,"loc":{"start":{"line":857,"column":23},"end":{"line":857,"column":57}}},"64":{"name":"compile","line":863,"loc":{"start":{"line":863,"column":52},"end":{"line":863,"column":73}}},"65":{"name":"handle","line":868,"loc":{"start":{"line":868,"column":4},"end":{"line":868,"column":34}}},"66":{"name":"each","line":874,"loc":{"start":{"line":874,"column":61},"end":{"line":874,"column":82}}},"67":{"name":"multi","line":891,"loc":{"start":{"line":891,"column":21},"end":{"line":891,"column":64}}},"68":{"name":"getMultiCommand","line":894,"loc":{"start":{"line":894,"column":24},"end":{"line":894,"column":58}}},"69":{"name":"setters","line":912,"loc":{"start":{"line":912,"column":21},"end":{"line":912,"column":91}}},"70":{"name":"settersCommand","line":936,"loc":{"start":{"line":936,"column":17},"end":{"line":936,"column":50}}},"71":{"name":"checkandset","line":985,"loc":{"start":{"line":985,"column":18},"end":{"line":985,"column":76}}},"72":{"name":"append","line":1002,"loc":{"start":{"line":1002,"column":21},"end":{"line":1002,"column":59}}},"73":{"name":"prepend","line":1018,"loc":{"start":{"line":1018,"column":22},"end":{"line":1018,"column":61}}},"74":{"name":"incrdecr","line":1035,"loc":{"start":{"line":1035,"column":22},"end":{"line":1035,"column":68}}},"75":{"name":"incredecrCommand","line":1037,"loc":{"start":{"line":1037,"column":17},"end":{"line":1037,"column":52}}},"76":{"name":"del","line":1060,"loc":{"start":{"line":1060,"column":18},"end":{"line":1060,"column":45}}},"77":{"name":"deleteCommand","line":1062,"loc":{"start":{"line":1062,"column":17},"end":{"line":1062,"column":49}}},"78":{"name":"singles","line":1080,"loc":{"start":{"line":1080,"column":21},"end":{"line":1080,"column":54}}},"79":{"name":"handle","line":1087,"loc":{"start":{"line":1087,"column":4},"end":{"line":1087,"column":34}}},"80":{"name":"multi","line":1100,"loc":{"start":{"line":1100,"column":22},"end":{"line":1100,"column":66}}},"81":{"name":"singlesCommand","line":1103,"loc":{"start":{"line":1103,"column":24},"end":{"line":1103,"column":57}}},"82":{"name":"cachedump","line":1130,"loc":{"start":{"line":1130,"column":24},"end":{"line":1130,"column":77}}},"83":{"name":"cachedumpCommand","line":1131,"loc":{"start":{"line":1131,"column":17},"end":{"line":1131,"column":52}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":7,"column":35}},"2":{"start":{"line":12,"column":0},"end":{"line":16,"column":35}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":24}},"4":{"start":{"line":31,"column":0},"end":{"line":69,"column":1}},"5":{"start":{"line":32,"column":2},"end":{"line":35,"column":10}},"6":{"start":{"line":38,"column":2},"end":{"line":51,"column":3}},"7":{"start":{"line":40,"column":6},"end":{"line":40,"column":21}},"8":{"start":{"line":41,"column":6},"end":{"line":41,"column":34}},"9":{"start":{"line":42,"column":6},"end":{"line":42,"column":12}},"10":{"start":{"line":45,"column":6},"end":{"line":45,"column":47}},"11":{"start":{"line":46,"column":6},"end":{"line":46,"column":12}},"12":{"start":{"line":49,"column":6},"end":{"line":49,"column":36}},"13":{"start":{"line":50,"column":6},"end":{"line":50,"column":12}},"14":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"15":{"start":{"line":54,"column":4},"end":{"line":54,"column":66}},"16":{"start":{"line":58,"column":2},"end":{"line":58,"column":35}},"17":{"start":{"line":59,"column":2},"end":{"line":59,"column":29}},"18":{"start":{"line":61,"column":2},"end":{"line":61,"column":25}},"19":{"start":{"line":62,"column":2},"end":{"line":62,"column":62}},"20":{"start":{"line":63,"column":2},"end":{"line":66,"column":5}},"21":{"start":{"line":67,"column":2},"end":{"line":67,"column":24}},"22":{"start":{"line":68,"column":2},"end":{"line":68,"column":19}},"23":{"start":{"line":72,"column":0},"end":{"line":99,"column":2}},"24":{"start":{"line":102,"column":0},"end":{"line":1146,"column":11}},"25":{"start":{"line":103,"column":2},"end":{"line":110,"column":26}},"26":{"start":{"line":112,"column":2},"end":{"line":112,"column":76}},"27":{"start":{"line":114,"column":2},"end":{"line":116,"column":16}},"28":{"start":{"line":120,"column":2},"end":{"line":218,"column":4}},"29":{"start":{"line":122,"column":4},"end":{"line":124,"column":5}},"30":{"start":{"line":123,"column":8},"end":{"line":123,"column":35}},"31":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"32":{"start":{"line":128,"column":8},"end":{"line":128,"column":38}},"33":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"34":{"start":{"line":133,"column":6},"end":{"line":133,"column":53}},"35":{"start":{"line":137,"column":4},"end":{"line":140,"column":25}},"36":{"start":{"line":143,"column":4},"end":{"line":143,"column":56}},"37":{"start":{"line":143,"column":37},"end":{"line":143,"column":56}},"38":{"start":{"line":145,"column":4},"end":{"line":146,"column":16}},"39":{"start":{"line":152,"column":4},"end":{"line":152,"column":41}},"40":{"start":{"line":153,"column":4},"end":{"line":153,"column":40}},"41":{"start":{"line":154,"column":4},"end":{"line":154,"column":38}},"42":{"start":{"line":155,"column":4},"end":{"line":155,"column":46}},"43":{"start":{"line":156,"column":4},"end":{"line":156,"column":46}},"44":{"start":{"line":157,"column":4},"end":{"line":157,"column":44}},"45":{"start":{"line":159,"column":4},"end":{"line":159,"column":31}},"46":{"start":{"line":161,"column":4},"end":{"line":207,"column":7}},"47":{"start":{"line":162,"column":6},"end":{"line":172,"column":10}},"48":{"start":{"line":167,"column":12},"end":{"line":167,"column":33}},"49":{"start":{"line":170,"column":12},"end":{"line":170,"column":55}},"50":{"start":{"line":171,"column":12},"end":{"line":171,"column":33}},"51":{"start":{"line":175,"column":6},"end":{"line":175,"column":25}},"52":{"start":{"line":176,"column":6},"end":{"line":176,"column":38}},"53":{"start":{"line":177,"column":6},"end":{"line":177,"column":25}},"54":{"start":{"line":178,"column":6},"end":{"line":178,"column":28}},"55":{"start":{"line":179,"column":6},"end":{"line":179,"column":22}},"56":{"start":{"line":180,"column":6},"end":{"line":180,"column":28}},"57":{"start":{"line":181,"column":6},"end":{"line":181,"column":25}},"58":{"start":{"line":182,"column":6},"end":{"line":182,"column":31}},"59":{"start":{"line":183,"column":6},"end":{"line":183,"column":41}},"60":{"start":{"line":184,"column":6},"end":{"line":184,"column":30}},"61":{"start":{"line":187,"column":6},"end":{"line":202,"column":9}},"62":{"start":{"line":189,"column":12},"end":{"line":189,"column":33}},"63":{"start":{"line":195,"column":12},"end":{"line":195,"column":62}},"64":{"start":{"line":199,"column":12},"end":{"line":199,"column":42}},"65":{"start":{"line":205,"column":6},"end":{"line":205,"column":35}},"66":{"start":{"line":206,"column":6},"end":{"line":206,"column":15}},"67":{"start":{"line":209,"column":4},"end":{"line":211,"column":7}},"68":{"start":{"line":210,"column":6},"end":{"line":210,"column":62}},"69":{"start":{"line":210,"column":27},"end":{"line":210,"column":62}},"70":{"start":{"line":213,"column":4},"end":{"line":213,"column":39}},"71":{"start":{"line":217,"column":4},"end":{"line":217,"column":44}},"72":{"start":{"line":221,"column":2},"end":{"line":223,"column":4}},"73":{"start":{"line":222,"column":4},"end":{"line":222,"column":50}},"74":{"start":{"line":227,"column":2},"end":{"line":260,"column":4}},"75":{"start":{"line":228,"column":4},"end":{"line":231,"column":10}},"76":{"start":{"line":235,"column":4},"end":{"line":252,"column":5}},"77":{"start":{"line":236,"column":6},"end":{"line":246,"column":9}},"78":{"start":{"line":237,"column":8},"end":{"line":239,"column":40}},"79":{"start":{"line":241,"column":8},"end":{"line":245,"column":9}},"80":{"start":{"line":242,"column":10},"end":{"line":242,"column":32}},"81":{"start":{"line":244,"column":10},"end":{"line":244,"column":30}},"82":{"start":{"line":249,"column":6},"end":{"line":249,"column":33}},"83":{"start":{"line":251,"column":6},"end":{"line":251,"column":29}},"84":{"start":{"line":254,"column":4},"end":{"line":254,"column":23}},"85":{"start":{"line":256,"column":4},"end":{"line":259,"column":5}},"86":{"start":{"line":258,"column":6},"end":{"line":258,"column":74}},"87":{"start":{"line":264,"column":2},"end":{"line":365,"column":4}},"88":{"start":{"line":266,"column":6},"end":{"line":266,"column":27}},"89":{"start":{"line":267,"column":6},"end":{"line":267,"column":34}},"90":{"start":{"line":269,"column":6},"end":{"line":273,"column":7}},"91":{"start":{"line":270,"column":10},"end":{"line":270,"column":70}},"92":{"start":{"line":271,"column":10},"end":{"line":271,"column":23}},"93":{"start":{"line":272,"column":10},"end":{"line":272,"column":17}},"94":{"start":{"line":276,"column":6},"end":{"line":278,"column":25}},"95":{"start":{"line":281,"column":4},"end":{"line":284,"column":5}},"96":{"start":{"line":282,"column":8},"end":{"line":282,"column":29}},"97":{"start":{"line":283,"column":8},"end":{"line":283,"column":15}},"98":{"start":{"line":287,"column":4},"end":{"line":300,"column":5}},"99":{"start":{"line":290,"column":6},"end":{"line":299,"column":7}},"100":{"start":{"line":291,"column":8},"end":{"line":291,"column":33}},"101":{"start":{"line":293,"column":8},"end":{"line":298,"column":9}},"102":{"start":{"line":294,"column":10},"end":{"line":294,"column":89}},"103":{"start":{"line":295,"column":10},"end":{"line":295,"column":38}},"104":{"start":{"line":297,"column":10},"end":{"line":297,"column":48}},"105":{"start":{"line":305,"column":4},"end":{"line":307,"column":5}},"106":{"start":{"line":306,"column":6},"end":{"line":306,"column":130}},"107":{"start":{"line":309,"column":4},"end":{"line":344,"column":7}},"108":{"start":{"line":310,"column":6},"end":{"line":314,"column":7}},"109":{"start":{"line":311,"column":8},"end":{"line":313,"column":11}},"110":{"start":{"line":312,"column":10},"end":{"line":312,"column":50}},"111":{"start":{"line":317,"column":6},"end":{"line":326,"column":7}},"112":{"start":{"line":318,"column":8},"end":{"line":321,"column":9}},"113":{"start":{"line":322,"column":8},"end":{"line":322,"column":61}},"114":{"start":{"line":323,"column":8},"end":{"line":323,"column":46}},"115":{"start":{"line":324,"column":8},"end":{"line":324,"column":91}},"116":{"start":{"line":329,"column":6},"end":{"line":332,"column":7}},"117":{"start":{"line":330,"column":8},"end":{"line":330,"column":55}},"118":{"start":{"line":331,"column":8},"end":{"line":331,"column":78}},"119":{"start":{"line":334,"column":6},"end":{"line":338,"column":7}},"120":{"start":{"line":335,"column":8},"end":{"line":335,"column":72}},"121":{"start":{"line":336,"column":8},"end":{"line":336,"column":46}},"122":{"start":{"line":337,"column":8},"end":{"line":337,"column":91}},"123":{"start":{"line":341,"column":6},"end":{"line":341,"column":31}},"124":{"start":{"line":342,"column":6},"end":{"line":342,"column":29}},"125":{"start":{"line":343,"column":6},"end":{"line":343,"column":62}},"126":{"start":{"line":351,"column":4},"end":{"line":364,"column":5}},"127":{"start":{"line":352,"column":6},"end":{"line":352,"column":55}},"128":{"start":{"line":354,"column":6},"end":{"line":363,"column":9}},"129":{"start":{"line":355,"column":8},"end":{"line":357,"column":9}},"130":{"start":{"line":356,"column":12},"end":{"line":356,"column":19}},"131":{"start":{"line":359,"column":8},"end":{"line":362,"column":11}},"132":{"start":{"line":360,"column":10},"end":{"line":360,"column":61}},"133":{"start":{"line":360,"column":54},"end":{"line":360,"column":61}},"134":{"start":{"line":361,"column":10},"end":{"line":361,"column":55}},"135":{"start":{"line":369,"column":2},"end":{"line":425,"column":4}},"136":{"start":{"line":370,"column":4},"end":{"line":370,"column":28}},"137":{"start":{"line":370,"column":20},"end":{"line":370,"column":28}},"138":{"start":{"line":372,"column":4},"end":{"line":374,"column":25}},"139":{"start":{"line":377,"column":4},"end":{"line":421,"column":5}},"140":{"start":{"line":378,"column":6},"end":{"line":378,"column":35}},"141":{"start":{"line":380,"column":6},"end":{"line":389,"column":9}},"142":{"start":{"line":392,"column":6},"end":{"line":417,"column":9}},"143":{"start":{"line":394,"column":12},"end":{"line":394,"column":45}},"144":{"start":{"line":397,"column":12},"end":{"line":397,"column":47}},"145":{"start":{"line":400,"column":12},"end":{"line":400,"column":52}},"146":{"start":{"line":403,"column":12},"end":{"line":403,"column":49}},"147":{"start":{"line":407,"column":12},"end":{"line":407,"column":46}},"148":{"start":{"line":408,"column":12},"end":{"line":408,"column":48}},"149":{"start":{"line":410,"column":12},"end":{"line":415,"column":13}},"150":{"start":{"line":411,"column":14},"end":{"line":411,"column":76}},"151":{"start":{"line":413,"column":14},"end":{"line":413,"column":48}},"152":{"start":{"line":414,"column":14},"end":{"line":414,"column":49}},"153":{"start":{"line":420,"column":6},"end":{"line":420,"column":32}},"154":{"start":{"line":424,"column":4},"end":{"line":424,"column":22}},"155":{"start":{"line":428,"column":2},"end":{"line":434,"column":4}},"156":{"start":{"line":429,"column":4},"end":{"line":429,"column":25}},"157":{"start":{"line":431,"column":4},"end":{"line":433,"column":7}},"158":{"start":{"line":432,"column":6},"end":{"line":432,"column":41}},"159":{"start":{"line":438,"column":2},"end":{"line":573,"column":4}},"160":{"start":{"line":441,"column":6},"end":{"line":441,"column":31}},"161":{"start":{"line":445,"column":6},"end":{"line":445,"column":51}},"162":{"start":{"line":446,"column":6},"end":{"line":446,"column":30}},"163":{"start":{"line":447,"column":6},"end":{"line":447,"column":23}},"164":{"start":{"line":448,"column":6},"end":{"line":448,"column":31}},"165":{"start":{"line":452,"column":6},"end":{"line":452,"column":56}},"166":{"start":{"line":453,"column":6},"end":{"line":453,"column":28}},"167":{"start":{"line":457,"column":6},"end":{"line":457,"column":54}},"168":{"start":{"line":458,"column":6},"end":{"line":458,"column":31}},"169":{"start":{"line":462,"column":6},"end":{"line":462,"column":86}},"170":{"start":{"line":463,"column":6},"end":{"line":463,"column":31}},"171":{"start":{"line":468,"column":6},"end":{"line":468,"column":30}},"172":{"start":{"line":472,"column":8},"end":{"line":472,"column":32}},"173":{"start":{"line":476,"column":6},"end":{"line":476,"column":30}},"174":{"start":{"line":480,"column":6},"end":{"line":480,"column":30}},"175":{"start":{"line":484,"column":6},"end":{"line":484,"column":31}},"176":{"start":{"line":488,"column":6},"end":{"line":488,"column":47}},"177":{"start":{"line":488,"column":25},"end":{"line":488,"column":47}},"178":{"start":{"line":489,"column":6},"end":{"line":489,"column":27}},"179":{"start":{"line":494,"column":6},"end":{"line":501,"column":14}},"180":{"start":{"line":508,"column":6},"end":{"line":510,"column":7}},"181":{"start":{"line":509,"column":8},"end":{"line":509,"column":21}},"182":{"start":{"line":512,"column":6},"end":{"line":524,"column":9}},"183":{"start":{"line":514,"column":10},"end":{"line":514,"column":40}},"184":{"start":{"line":515,"column":10},"end":{"line":515,"column":16}},"185":{"start":{"line":517,"column":10},"end":{"line":517,"column":29}},"186":{"start":{"line":518,"column":10},"end":{"line":518,"column":16}},"187":{"start":{"line":520,"column":10},"end":{"line":520,"column":43}},"188":{"start":{"line":521,"column":10},"end":{"line":521,"column":42}},"189":{"start":{"line":522,"column":10},"end":{"line":522,"column":24}},"190":{"start":{"line":523,"column":10},"end":{"line":523,"column":16}},"191":{"start":{"line":527,"column":6},"end":{"line":533,"column":7}},"192":{"start":{"line":528,"column":8},"end":{"line":528,"column":28}},"193":{"start":{"line":530,"column":8},"end":{"line":530,"column":29}},"194":{"start":{"line":531,"column":8},"end":{"line":531,"column":33}},"195":{"start":{"line":531,"column":17},"end":{"line":531,"column":33}},"196":{"start":{"line":532,"column":8},"end":{"line":532,"column":26}},"197":{"start":{"line":535,"column":6},"end":{"line":535,"column":29}},"198":{"start":{"line":539,"column":6},"end":{"line":539,"column":36}},"199":{"start":{"line":543,"column":6},"end":{"line":543,"column":80}},"200":{"start":{"line":544,"column":6},"end":{"line":544,"column":28}},"201":{"start":{"line":548,"column":6},"end":{"line":548,"column":73}},"202":{"start":{"line":550,"column":6},"end":{"line":556,"column":9}},"203":{"start":{"line":560,"column":6},"end":{"line":564,"column":9}},"204":{"start":{"line":566,"column":6},"end":{"line":566,"column":29}},"205":{"start":{"line":571,"column":6},"end":{"line":571,"column":45}},"206":{"start":{"line":575,"column":2},"end":{"line":577,"column":3}},"207":{"start":{"line":576,"column":4},"end":{"line":576,"column":67}},"208":{"start":{"line":580,"column":2},"end":{"line":642,"column":4}},"209":{"start":{"line":583,"column":6},"end":{"line":583,"column":24}},"210":{"start":{"line":584,"column":6},"end":{"line":584,"column":55}},"211":{"start":{"line":584,"column":39},"end":{"line":584,"column":55}},"212":{"start":{"line":587,"column":6},"end":{"line":587,"column":43}},"213":{"start":{"line":590,"column":6},"end":{"line":592,"column":9}},"214":{"start":{"line":591,"column":8},"end":{"line":591,"column":55}},"215":{"start":{"line":591,"column":21},"end":{"line":591,"column":55}},"216":{"start":{"line":594,"column":6},"end":{"line":594,"column":22}},"217":{"start":{"line":599,"column":6},"end":{"line":599,"column":65}},"218":{"start":{"line":604,"column":6},"end":{"line":604,"column":24}},"219":{"start":{"line":605,"column":6},"end":{"line":605,"column":55}},"220":{"start":{"line":605,"column":39},"end":{"line":605,"column":55}},"221":{"start":{"line":608,"column":6},"end":{"line":608,"column":43}},"222":{"start":{"line":611,"column":6},"end":{"line":618,"column":9}},"223":{"start":{"line":612,"column":8},"end":{"line":617,"column":9}},"224":{"start":{"line":613,"column":10},"end":{"line":613,"column":49}},"225":{"start":{"line":615,"column":10},"end":{"line":615,"column":69}},"226":{"start":{"line":615,"column":40},"end":{"line":615,"column":69}},"227":{"start":{"line":616,"column":10},"end":{"line":616,"column":62}},"228":{"start":{"line":620,"column":6},"end":{"line":620,"column":22}},"229":{"start":{"line":624,"column":6},"end":{"line":624,"column":24}},"230":{"start":{"line":625,"column":6},"end":{"line":625,"column":55}},"231":{"start":{"line":625,"column":39},"end":{"line":625,"column":55}},"232":{"start":{"line":628,"column":6},"end":{"line":628,"column":43}},"233":{"start":{"line":631,"column":6},"end":{"line":638,"column":9}},"234":{"start":{"line":632,"column":8},"end":{"line":637,"column":9}},"235":{"start":{"line":633,"column":10},"end":{"line":633,"column":49}},"236":{"start":{"line":635,"column":10},"end":{"line":635,"column":69}},"237":{"start":{"line":635,"column":40},"end":{"line":635,"column":69}},"238":{"start":{"line":636,"column":10},"end":{"line":636,"column":62}},"239":{"start":{"line":640,"column":6},"end":{"line":640,"column":22}},"240":{"start":{"line":645,"column":2},"end":{"line":645,"column":101}},"241":{"start":{"line":646,"column":2},"end":{"line":646,"column":97}},"242":{"start":{"line":657,"column":2},"end":{"line":680,"column":4}},"243":{"start":{"line":658,"column":4},"end":{"line":658,"column":37}},"244":{"start":{"line":662,"column":4},"end":{"line":679,"column":5}},"245":{"start":{"line":663,"column":6},"end":{"line":663,"column":63}},"246":{"start":{"line":665,"column":6},"end":{"line":665,"column":53}},"247":{"start":{"line":667,"column":6},"end":{"line":671,"column":7}},"248":{"start":{"line":668,"column":8},"end":{"line":670,"column":11}},"249":{"start":{"line":669,"column":10},"end":{"line":669,"column":50}},"250":{"start":{"line":674,"column":6},"end":{"line":674,"column":42}},"251":{"start":{"line":675,"column":6},"end":{"line":675,"column":74}},"252":{"start":{"line":675,"column":44},"end":{"line":675,"column":74}},"253":{"start":{"line":677,"column":6},"end":{"line":677,"column":28}},"254":{"start":{"line":678,"column":6},"end":{"line":678,"column":76}},"255":{"start":{"line":682,"column":2},"end":{"line":688,"column":4}},"256":{"start":{"line":683,"column":8},"end":{"line":683,"column":29}},"257":{"start":{"line":684,"column":8},"end":{"line":684,"column":34}},"258":{"start":{"line":685,"column":8},"end":{"line":685,"column":47}},"259":{"start":{"line":686,"column":8},"end":{"line":686,"column":80}},"260":{"start":{"line":687,"column":8},"end":{"line":687,"column":31}},"261":{"start":{"line":690,"column":2},"end":{"line":694,"column":4}},"262":{"start":{"line":691,"column":7},"end":{"line":691,"column":28}},"263":{"start":{"line":692,"column":7},"end":{"line":692,"column":59}},"264":{"start":{"line":693,"column":7},"end":{"line":693,"column":28}},"265":{"start":{"line":700,"column":2},"end":{"line":800,"column":4}},"266":{"start":{"line":701,"column":4},"end":{"line":708,"column":12}},"267":{"start":{"line":710,"column":4},"end":{"line":799,"column":5}},"268":{"start":{"line":711,"column":6},"end":{"line":711,"column":36}},"269":{"start":{"line":712,"column":6},"end":{"line":712,"column":34}},"270":{"start":{"line":714,"column":6},"end":{"line":728,"column":7}},"271":{"start":{"line":721,"column":10},"end":{"line":727,"column":11}},"272":{"start":{"line":722,"column":14},"end":{"line":722,"column":41}},"273":{"start":{"line":726,"column":12},"end":{"line":726,"column":41}},"274":{"start":{"line":732,"column":6},"end":{"line":734,"column":7}},"275":{"start":{"line":733,"column":8},"end":{"line":733,"column":44}},"276":{"start":{"line":737,"column":6},"end":{"line":791,"column":7}},"277":{"start":{"line":740,"column":8},"end":{"line":742,"column":9}},"278":{"start":{"line":741,"column":10},"end":{"line":741,"column":63}},"279":{"start":{"line":744,"column":8},"end":{"line":744,"column":104}},"280":{"start":{"line":747,"column":8},"end":{"line":783,"column":9}},"281":{"start":{"line":749,"column":12},"end":{"line":749,"column":18}},"282":{"start":{"line":752,"column":12},"end":{"line":752,"column":42}},"283":{"start":{"line":753,"column":12},"end":{"line":753,"column":30}},"284":{"start":{"line":756,"column":12},"end":{"line":768,"column":13}},"285":{"start":{"line":757,"column":14},"end":{"line":757,"column":63}},"286":{"start":{"line":758,"column":16},"end":{"line":767,"column":16}},"287":{"start":{"line":770,"column":12},"end":{"line":770,"column":42}},"288":{"start":{"line":771,"column":12},"end":{"line":771,"column":18}},"289":{"start":{"line":774,"column":12},"end":{"line":774,"column":42}},"290":{"start":{"line":776,"column":12},"end":{"line":779,"column":13}},"291":{"start":{"line":777,"column":14},"end":{"line":777,"column":63}},"292":{"start":{"line":778,"column":14},"end":{"line":778,"column":110}},"293":{"start":{"line":781,"column":12},"end":{"line":781,"column":27}},"294":{"start":{"line":782,"column":12},"end":{"line":782,"column":18}},"295":{"start":{"line":786,"column":8},"end":{"line":786,"column":38}},"296":{"start":{"line":787,"column":8},"end":{"line":790,"column":9}},"297":{"start":{"line":788,"column":10},"end":{"line":788,"column":59}},"298":{"start":{"line":789,"column":12},"end":{"line":789,"column":144}},"299":{"start":{"line":794,"column":6},"end":{"line":794,"column":48}},"300":{"start":{"line":798,"column":6},"end":{"line":798,"column":57}},"301":{"start":{"line":798,"column":35},"end":{"line":798,"column":57}},"302":{"start":{"line":803,"column":2},"end":{"line":809,"column":4}},"303":{"start":{"line":804,"column":4},"end":{"line":806,"column":5}},"304":{"start":{"line":805,"column":8},"end":{"line":805,"column":54}},"305":{"start":{"line":808,"column":4},"end":{"line":808,"column":17}},"306":{"start":{"line":812,"column":2},"end":{"line":824,"column":4}},"307":{"start":{"line":813,"column":4},"end":{"line":813,"column":39}},"308":{"start":{"line":814,"column":4},"end":{"line":823,"column":7}},"309":{"start":{"line":815,"column":6},"end":{"line":822,"column":8}},"310":{"start":{"line":826,"column":2},"end":{"line":839,"column":4}},"311":{"start":{"line":827,"column":4},"end":{"line":827,"column":72}},"312":{"start":{"line":827,"column":28},"end":{"line":827,"column":72}},"313":{"start":{"line":829,"column":4},"end":{"line":829,"column":39}},"314":{"start":{"line":830,"column":4},"end":{"line":838,"column":7}},"315":{"start":{"line":831,"column":6},"end":{"line":837,"column":8}},"316":{"start":{"line":843,"column":2},"end":{"line":854,"column":4}},"317":{"start":{"line":844,"column":4},"end":{"line":844,"column":39}},"318":{"start":{"line":845,"column":4},"end":{"line":853,"column":7}},"319":{"start":{"line":846,"column":6},"end":{"line":852,"column":8}},"320":{"start":{"line":857,"column":2},"end":{"line":905,"column":4}},"321":{"start":{"line":858,"column":4},"end":{"line":861,"column":14}},"322":{"start":{"line":863,"column":4},"end":{"line":865,"column":7}},"323":{"start":{"line":863,"column":36},"end":{"line":865,"column":7}},"324":{"start":{"line":864,"column":6},"end":{"line":864,"column":39}},"325":{"start":{"line":868,"column":4},"end":{"line":889,"column":5}},"326":{"start":{"line":869,"column":6},"end":{"line":871,"column":7}},"327":{"start":{"line":870,"column":8},"end":{"line":870,"column":25}},"328":{"start":{"line":874,"column":6},"end":{"line":884,"column":9}},"329":{"start":{"line":875,"column":8},"end":{"line":883,"column":9}},"330":{"start":{"line":876,"column":10},"end":{"line":877,"column":28}},"331":{"start":{"line":879,"column":10},"end":{"line":879,"column":76}},"332":{"start":{"line":880,"column":10},"end":{"line":880,"column":43}},"333":{"start":{"line":882,"column":10},"end":{"line":882,"column":40}},"334":{"start":{"line":886,"column":6},"end":{"line":888,"column":7}},"335":{"start":{"line":887,"column":10},"end":{"line":887,"column":66}},"336":{"start":{"line":891,"column":4},"end":{"line":904,"column":7}},"337":{"start":{"line":892,"column":6},"end":{"line":892,"column":33}},"338":{"start":{"line":892,"column":18},"end":{"line":892,"column":33}},"339":{"start":{"line":894,"column":6},"end":{"line":903,"column":17}},"340":{"start":{"line":895,"column":8},"end":{"line":902,"column":10}},"341":{"start":{"line":912,"column":2},"end":{"line":952,"column":4}},"342":{"start":{"line":913,"column":4},"end":{"line":913,"column":39}},"343":{"start":{"line":914,"column":4},"end":{"line":916,"column":15}},"344":{"start":{"line":918,"column":4},"end":{"line":927,"column":5}},"345":{"start":{"line":919,"column":6},"end":{"line":919,"column":25}},"346":{"start":{"line":920,"column":6},"end":{"line":920,"column":39}},"347":{"start":{"line":921,"column":11},"end":{"line":927,"column":5}},"348":{"start":{"line":922,"column":6},"end":{"line":922,"column":26}},"349":{"start":{"line":923,"column":6},"end":{"line":923,"column":31}},"350":{"start":{"line":924,"column":11},"end":{"line":927,"column":5}},"351":{"start":{"line":925,"column":6},"end":{"line":925,"column":23}},"352":{"start":{"line":926,"column":6},"end":{"line":926,"column":36}},"353":{"start":{"line":929,"column":4},"end":{"line":929,"column":37}},"354":{"start":{"line":931,"column":4},"end":{"line":931,"column":38}},"355":{"start":{"line":932,"column":4},"end":{"line":934,"column":5}},"356":{"start":{"line":933,"column":6},"end":{"line":933,"column":117}},"357":{"start":{"line":936,"column":4},"end":{"line":951,"column":7}},"358":{"start":{"line":937,"column":6},"end":{"line":950,"column":8}},"359":{"start":{"line":955,"column":2},"end":{"line":963,"column":4}},"360":{"start":{"line":965,"column":2},"end":{"line":973,"column":4}},"361":{"start":{"line":975,"column":2},"end":{"line":983,"column":4}},"362":{"start":{"line":985,"column":2},"end":{"line":1000,"column":4}},"363":{"start":{"line":986,"column":4},"end":{"line":999,"column":6}},"364":{"start":{"line":1002,"column":2},"end":{"line":1016,"column":4}},"365":{"start":{"line":1003,"column":4},"end":{"line":1015,"column":6}},"366":{"start":{"line":1018,"column":2},"end":{"line":1032,"column":4}},"367":{"start":{"line":1019,"column":4},"end":{"line":1031,"column":6}},"368":{"start":{"line":1035,"column":2},"end":{"line":1053,"column":4}},"369":{"start":{"line":1036,"column":4},"end":{"line":1036,"column":39}},"370":{"start":{"line":1037,"column":4},"end":{"line":1052,"column":7}},"371":{"start":{"line":1038,"column":6},"end":{"line":1051,"column":8}},"372":{"start":{"line":1056,"column":2},"end":{"line":1056,"column":85}},"373":{"start":{"line":1057,"column":2},"end":{"line":1057,"column":85}},"374":{"start":{"line":1060,"column":2},"end":{"line":1076,"column":4}},"375":{"start":{"line":1061,"column":4},"end":{"line":1061,"column":39}},"376":{"start":{"line":1062,"column":4},"end":{"line":1075,"column":7}},"377":{"start":{"line":1063,"column":6},"end":{"line":1074,"column":8}},"378":{"start":{"line":1077,"column":2},"end":{"line":1077,"column":38}},"379":{"start":{"line":1080,"column":2},"end":{"line":1111,"column":4}},"380":{"start":{"line":1081,"column":4},"end":{"line":1084,"column":14}},"381":{"start":{"line":1087,"column":4},"end":{"line":1098,"column":5}},"382":{"start":{"line":1088,"column":6},"end":{"line":1091,"column":7}},"383":{"start":{"line":1089,"column":8},"end":{"line":1089,"column":30}},"384":{"start":{"line":1090,"column":8},"end":{"line":1090,"column":25}},"385":{"start":{"line":1092,"column":6},"end":{"line":1092,"column":57}},"386":{"start":{"line":1092,"column":19},"end":{"line":1092,"column":57}},"387":{"start":{"line":1095,"column":6},"end":{"line":1097,"column":7}},"388":{"start":{"line":1096,"column":10},"end":{"line":1096,"column":82}},"389":{"start":{"line":1100,"column":4},"end":{"line":1110,"column":7}},"390":{"start":{"line":1101,"column":6},"end":{"line":1101,"column":33}},"391":{"start":{"line":1101,"column":18},"end":{"line":1101,"column":33}},"392":{"start":{"line":1103,"column":6},"end":{"line":1109,"column":17}},"393":{"start":{"line":1104,"column":8},"end":{"line":1108,"column":10}},"394":{"start":{"line":1114,"column":2},"end":{"line":1114,"column":69}},"395":{"start":{"line":1115,"column":2},"end":{"line":1115,"column":68}},"396":{"start":{"line":1116,"column":2},"end":{"line":1116,"column":64}},"397":{"start":{"line":1117,"column":2},"end":{"line":1117,"column":76}},"398":{"start":{"line":1118,"column":2},"end":{"line":1118,"column":70}},"399":{"start":{"line":1119,"column":2},"end":{"line":1119,"column":70}},"400":{"start":{"line":1122,"column":2},"end":{"line":1122,"column":39}},"401":{"start":{"line":1123,"column":2},"end":{"line":1123,"column":47}},"402":{"start":{"line":1124,"column":2},"end":{"line":1124,"column":41}},"403":{"start":{"line":1125,"column":2},"end":{"line":1125,"column":41}},"404":{"start":{"line":1130,"column":2},"end":{"line":1145,"column":4}},"405":{"start":{"line":1131,"column":4},"end":{"line":1144,"column":15}},"406":{"start":{"line":1132,"column":6},"end":{"line":1143,"column":8}},"407":{"start":{"line":1148,"column":0},"end":{"line":1148,"column":24}}},"branchMap":{"1":{"line":38,"type":"switch","locations":[{"start":{"line":39,"column":4},"end":{"line":42,"column":12}},{"start":{"line":44,"column":4},"end":{"line":46,"column":12}},{"start":{"line":48,"column":4},"end":{"line":50,"column":12}}]},"2":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":30},"end":{"line":45,"column":34}},{"start":{"line":45,"column":37},"end":{"line":45,"column":46}}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":19},"end":{"line":49,"column":23}},{"start":{"line":49,"column":27},"end":{"line":49,"column":34}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"5":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":22},"end":{"line":62,"column":40}},{"start":{"line":62,"column":44},"end":{"line":62,"column":61}}]},"6":{"line":65,"type":"cond-expr","locations":[{"start":{"line":65,"column":49},"end":{"line":65,"column":54}},{"start":{"line":65,"column":57},"end":{"line":65,"column":61}}]},"7":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"8":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"9":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":29}},{"start":{"line":127,"column":33},"end":{"line":127,"column":59}}]},"10":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"11":{"line":137,"type":"cond-expr","locations":[{"start":{"line":138,"column":10},"end":{"line":138,"column":16}},{"start":{"line":139,"column":10},"end":{"line":139,"column":50}}]},"12":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"13":{"line":162,"type":"cond-expr","locations":[{"start":{"line":163,"column":12},"end":{"line":163,"column":22}},{"start":{"line":164,"column":12},"end":{"line":164,"column":22}}]},"14":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":6}},{"start":{"line":210,"column":6},"end":{"line":210,"column":6}}]},"15":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]},"16":{"line":237,"type":"cond-expr","locations":[{"start":{"line":238,"column":12},"end":{"line":238,"column":32}},{"start":{"line":239,"column":12},"end":{"line":239,"column":39}}]},"17":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":8},"end":{"line":241,"column":8}},{"start":{"line":241,"column":8},"end":{"line":241,"column":8}}]},"18":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":6},"end":{"line":269,"column":6}},{"start":{"line":269,"column":6},"end":{"line":269,"column":6}}]},"19":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":10},"end":{"line":269,"column":47}},{"start":{"line":269,"column":51},"end":{"line":269,"column":72}}]},"20":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":23},"end":{"line":276,"column":38}},{"start":{"line":276,"column":42},"end":{"line":276,"column":79}}]},"21":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":4},"end":{"line":281,"column":4}},{"start":{"line":281,"column":4},"end":{"line":281,"column":4}}]},"22":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":8},"end":{"line":281,"column":22}},{"start":{"line":281,"column":26},"end":{"line":281,"column":57}}]},"23":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"24":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":6},"end":{"line":290,"column":6}},{"start":{"line":290,"column":6},"end":{"line":290,"column":6}}]},"25":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":8},"end":{"line":293,"column":8}},{"start":{"line":293,"column":8},"end":{"line":293,"column":8}}]},"26":{"line":293,"type":"binary-expr","locations":[{"start":{"line":293,"column":12},"end":{"line":293,"column":22}},{"start":{"line":293,"column":26},"end":{"line":293,"column":41}}]},"27":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":305,"column":4}},{"start":{"line":305,"column":4},"end":{"line":305,"column":4}}]},"28":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":15}},{"start":{"line":305,"column":20},"end":{"line":305,"column":41}},{"start":{"line":305,"column":45},"end":{"line":305,"column":71}}]},"29":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":13},"end":{"line":306,"column":27}},{"start":{"line":306,"column":31},"end":{"line":306,"column":129}}]},"30":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":6},"end":{"line":310,"column":6}},{"start":{"line":310,"column":6},"end":{"line":310,"column":6}}]},"31":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":6},"end":{"line":317,"column":6}},{"start":{"line":317,"column":6},"end":{"line":317,"column":6}}]},"32":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":22},"end":{"line":322,"column":27}},{"start":{"line":322,"column":31},"end":{"line":322,"column":60}}]},"33":{"line":324,"type":"binary-expr","locations":[{"start":{"line":324,"column":15},"end":{"line":324,"column":29}},{"start":{"line":324,"column":33},"end":{"line":324,"column":90}}]},"34":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":6},"end":{"line":329,"column":6}},{"start":{"line":329,"column":6},"end":{"line":329,"column":6}}]},"35":{"line":331,"type":"binary-expr","locations":[{"start":{"line":331,"column":15},"end":{"line":331,"column":29}},{"start":{"line":331,"column":33},"end":{"line":331,"column":77}}]},"36":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":6},"end":{"line":334,"column":6}},{"start":{"line":334,"column":6},"end":{"line":334,"column":6}}]},"37":{"line":337,"type":"binary-expr","locations":[{"start":{"line":337,"column":15},"end":{"line":337,"column":29}},{"start":{"line":337,"column":33},"end":{"line":337,"column":90}}]},"38":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":351,"column":4}},{"start":{"line":351,"column":4},"end":{"line":351,"column":4}}]},"39":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":8},"end":{"line":351,"column":18}},{"start":{"line":351,"column":22},"end":{"line":351,"column":37}}]},"40":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":8},"end":{"line":355,"column":8}},{"start":{"line":355,"column":8},"end":{"line":355,"column":8}}]},"41":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":12},"end":{"line":355,"column":38}},{"start":{"line":355,"column":42},"end":{"line":355,"column":73}}]},"42":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":10},"end":{"line":360,"column":10}},{"start":{"line":360,"column":10},"end":{"line":360,"column":10}}]},"43":{"line":360,"type":"binary-expr","locations":[{"start":{"line":360,"column":14},"end":{"line":360,"column":16}},{"start":{"line":360,"column":20},"end":{"line":360,"column":25}},{"start":{"line":360,"column":29},"end":{"line":360,"column":52}}]},"44":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":370,"column":4}},{"start":{"line":370,"column":4},"end":{"line":370,"column":4}}]},"45":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":8},"end":{"line":370,"column":9}},{"start":{"line":370,"column":13},"end":{"line":370,"column":18}}]},"46":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":377,"column":4}},{"start":{"line":377,"column":4},"end":{"line":377,"column":4}}]},"47":{"line":388,"type":"binary-expr","locations":[{"start":{"line":388,"column":27},"end":{"line":388,"column":47}},{"start":{"line":388,"column":51},"end":{"line":388,"column":55}}]},"48":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":12},"end":{"line":410,"column":12}},{"start":{"line":410,"column":12},"end":{"line":410,"column":12}}]},"49":{"line":410,"type":"binary-expr","locations":[{"start":{"line":410,"column":16},"end":{"line":410,"column":36}},{"start":{"line":410,"column":40},"end":{"line":410,"column":67}}]},"50":{"line":462,"type":"binary-expr","locations":[{"start":{"line":462,"column":7},"end":{"line":462,"column":16}},{"start":{"line":462,"column":20},"end":{"line":462,"column":34}}]},"51":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":6},"end":{"line":488,"column":6}},{"start":{"line":488,"column":6},"end":{"line":488,"column":6}}]},"52":{"line":498,"type":"cond-expr","locations":[{"start":{"line":499,"column":12},"end":{"line":499,"column":14}},{"start":{"line":500,"column":12},"end":{"line":500,"column":17}}]},"53":{"line":498,"type":"binary-expr","locations":[{"start":{"line":498,"column":18},"end":{"line":498,"column":34}},{"start":{"line":498,"column":38},"end":{"line":498,"column":60}},{"start":{"line":498,"column":64},"end":{"line":498,"column":67}}]},"54":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":6},"end":{"line":508,"column":6}},{"start":{"line":508,"column":6},"end":{"line":508,"column":6}}]},"55":{"line":512,"type":"switch","locations":[{"start":{"line":513,"column":8},"end":{"line":515,"column":16}},{"start":{"line":516,"column":8},"end":{"line":518,"column":16}},{"start":{"line":519,"column":8},"end":{"line":523,"column":16}}]},"56":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":6},"end":{"line":527,"column":6}},{"start":{"line":527,"column":6},"end":{"line":527,"column":6}}]},"57":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":8},"end":{"line":531,"column":8}},{"start":{"line":531,"column":8},"end":{"line":531,"column":8}}]},"58":{"line":543,"type":"cond-expr","locations":[{"start":{"line":543,"column":55},"end":{"line":543,"column":65}},{"start":{"line":543,"column":68},"end":{"line":543,"column":77}}]},"59":{"line":553,"type":"binary-expr","locations":[{"start":{"line":553,"column":15},"end":{"line":553,"column":31}},{"start":{"line":553,"column":35},"end":{"line":553,"column":36}}]},"60":{"line":554,"type":"binary-expr","locations":[{"start":{"line":554,"column":15},"end":{"line":554,"column":31}},{"start":{"line":554,"column":35},"end":{"line":554,"column":36}}]},"61":{"line":555,"type":"binary-expr","locations":[{"start":{"line":555,"column":16},"end":{"line":555,"column":32}},{"start":{"line":555,"column":36},"end":{"line":555,"column":37}}]},"62":{"line":576,"type":"binary-expr","locations":[{"start":{"line":576,"column":11},"end":{"line":576,"column":21}},{"start":{"line":576,"column":26},"end":{"line":576,"column":48}},{"start":{"line":576,"column":52},"end":{"line":576,"column":65}}]},"63":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":6},"end":{"line":584,"column":6}},{"start":{"line":584,"column":6},"end":{"line":584,"column":6}}]},"64":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":8},"end":{"line":591,"column":8}},{"start":{"line":591,"column":8},"end":{"line":591,"column":8}}]},"65":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":6},"end":{"line":605,"column":6}},{"start":{"line":605,"column":6},"end":{"line":605,"column":6}}]},"66":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":8},"end":{"line":612,"column":8}},{"start":{"line":612,"column":8},"end":{"line":612,"column":8}}]},"67":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":10},"end":{"line":615,"column":10}},{"start":{"line":615,"column":10},"end":{"line":615,"column":10}}]},"68":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":6},"end":{"line":625,"column":6}},{"start":{"line":625,"column":6},"end":{"line":625,"column":6}}]},"69":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":8},"end":{"line":632,"column":8}},{"start":{"line":632,"column":8},"end":{"line":632,"column":8}}]},"70":{"line":632,"type":"binary-expr","locations":[{"start":{"line":632,"column":12},"end":{"line":632,"column":19}},{"start":{"line":632,"column":23},"end":{"line":632,"column":41}}]},"71":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":10},"end":{"line":635,"column":10}},{"start":{"line":635,"column":10},"end":{"line":635,"column":10}}]},"72":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":4},"end":{"line":662,"column":4}},{"start":{"line":662,"column":4},"end":{"line":662,"column":4}}]},"73":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":6},"end":{"line":667,"column":6}},{"start":{"line":667,"column":6},"end":{"line":667,"column":6}}]},"74":{"line":675,"type":"if","locations":[{"start":{"line":675,"column":6},"end":{"line":675,"column":6}},{"start":{"line":675,"column":6},"end":{"line":675,"column":6}}]},"75":{"line":710,"type":"binary-expr","locations":[{"start":{"line":710,"column":10},"end":{"line":710,"column":30}},{"start":{"line":710,"column":34},"end":{"line":710,"column":77}}]},"76":{"line":714,"type":"if","locations":[{"start":{"line":714,"column":6},"end":{"line":714,"column":6}},{"start":{"line":714,"column":6},"end":{"line":714,"column":6}}]},"77":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":10},"end":{"line":721,"column":10}},{"start":{"line":721,"column":10},"end":{"line":721,"column":10}}]},"78":{"line":732,"type":"if","locations":[{"start":{"line":732,"column":6},"end":{"line":732,"column":6}},{"start":{"line":732,"column":6},"end":{"line":732,"column":6}}]},"79":{"line":732,"type":"binary-expr","locations":[{"start":{"line":732,"column":10},"end":{"line":732,"column":33}},{"start":{"line":732,"column":37},"end":{"line":732,"column":72}}]},"80":{"line":737,"type":"if","locations":[{"start":{"line":737,"column":6},"end":{"line":737,"column":6}},{"start":{"line":737,"column":6},"end":{"line":737,"column":6}}]},"81":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":8},"end":{"line":740,"column":8}},{"start":{"line":740,"column":8},"end":{"line":740,"column":8}}]},"82":{"line":744,"type":"binary-expr","locations":[{"start":{"line":744,"column":68},"end":{"line":744,"column":75}},{"start":{"line":744,"column":79},"end":{"line":744,"column":84}}]},"83":{"line":747,"type":"switch","locations":[{"start":{"line":748,"column":10},"end":{"line":749,"column":18}},{"start":{"line":751,"column":10},"end":{"line":771,"column":18}},{"start":{"line":773,"column":10},"end":{"line":782,"column":18}}]},"84":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":12},"end":{"line":756,"column":12}},{"start":{"line":756,"column":12},"end":{"line":756,"column":12}}]},"85":{"line":756,"type":"binary-expr","locations":[{"start":{"line":756,"column":16},"end":{"line":756,"column":24}},{"start":{"line":756,"column":28},"end":{"line":756,"column":45}}]},"86":{"line":760,"type":"cond-expr","locations":[{"start":{"line":760,"column":31},"end":{"line":760,"column":34}},{"start":{"line":760,"column":37},"end":{"line":760,"column":43}}]},"87":{"line":763,"type":"cond-expr","locations":[{"start":{"line":764,"column":22},"end":{"line":764,"column":83}},{"start":{"line":765,"column":22},"end":{"line":765,"column":82}}]},"88":{"line":765,"type":"cond-expr","locations":[{"start":{"line":765,"column":66},"end":{"line":765,"column":71}},{"start":{"line":765,"column":74},"end":{"line":765,"column":82}}]},"89":{"line":765,"type":"binary-expr","locations":[{"start":{"line":765,"column":22},"end":{"line":765,"column":43}},{"start":{"line":765,"column":47},"end":{"line":765,"column":63}}]},"90":{"line":776,"type":"if","locations":[{"start":{"line":776,"column":12},"end":{"line":776,"column":12}},{"start":{"line":776,"column":12},"end":{"line":776,"column":12}}]},"91":{"line":776,"type":"binary-expr","locations":[{"start":{"line":776,"column":16},"end":{"line":776,"column":24}},{"start":{"line":776,"column":28},"end":{"line":776,"column":45}}]},"92":{"line":778,"type":"cond-expr","locations":[{"start":{"line":778,"column":63},"end":{"line":778,"column":66}},{"start":{"line":778,"column":69},"end":{"line":778,"column":75}}]},"93":{"line":787,"type":"if","locations":[{"start":{"line":787,"column":8},"end":{"line":787,"column":8}},{"start":{"line":787,"column":8},"end":{"line":787,"column":8}}]},"94":{"line":787,"type":"binary-expr","locations":[{"start":{"line":787,"column":12},"end":{"line":787,"column":20}},{"start":{"line":787,"column":24},"end":{"line":787,"column":41}}]},"95":{"line":798,"type":"if","locations":[{"start":{"line":798,"column":6},"end":{"line":798,"column":6}},{"start":{"line":798,"column":6},"end":{"line":798,"column":6}}]},"96":{"line":804,"type":"if","locations":[{"start":{"line":804,"column":4},"end":{"line":804,"column":4}},{"start":{"line":804,"column":4},"end":{"line":804,"column":4}}]},"97":{"line":827,"type":"if","locations":[{"start":{"line":827,"column":4},"end":{"line":827,"column":4}},{"start":{"line":827,"column":4},"end":{"line":827,"column":4}}]},"98":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":4},"end":{"line":863,"column":4}},{"start":{"line":863,"column":4},"end":{"line":863,"column":4}}]},"99":{"line":869,"type":"if","locations":[{"start":{"line":869,"column":6},"end":{"line":869,"column":6}},{"start":{"line":869,"column":6},"end":{"line":869,"column":6}}]},"100":{"line":874,"type":"cond-expr","locations":[{"start":{"line":874,"column":32},"end":{"line":874,"column":39}},{"start":{"line":874,"column":42},"end":{"line":874,"column":51}}]},"101":{"line":875,"type":"if","locations":[{"start":{"line":875,"column":8},"end":{"line":875,"column":8}},{"start":{"line":875,"column":8},"end":{"line":875,"column":8}}]},"102":{"line":875,"type":"binary-expr","locations":[{"start":{"line":875,"column":12},"end":{"line":875,"column":17}},{"start":{"line":875,"column":21},"end":{"line":875,"column":47}}]},"103":{"line":886,"type":"if","locations":[{"start":{"line":886,"column":6},"end":{"line":886,"column":6}},{"start":{"line":886,"column":6},"end":{"line":886,"column":6}}]},"104":{"line":887,"type":"cond-expr","locations":[{"start":{"line":887,"column":35},"end":{"line":887,"column":41}},{"start":{"line":887,"column":44},"end":{"line":887,"column":53}}]},"105":{"line":892,"type":"if","locations":[{"start":{"line":892,"column":6},"end":{"line":892,"column":6}},{"start":{"line":892,"column":6},"end":{"line":892,"column":6}}]},"106":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":4},"end":{"line":918,"column":4}},{"start":{"line":918,"column":4},"end":{"line":918,"column":4}}]},"107":{"line":921,"type":"if","locations":[{"start":{"line":921,"column":11},"end":{"line":921,"column":11}},{"start":{"line":921,"column":11},"end":{"line":921,"column":11}}]},"108":{"line":924,"type":"if","locations":[{"start":{"line":924,"column":11},"end":{"line":924,"column":11}},{"start":{"line":924,"column":11},"end":{"line":924,"column":11}}]},"109":{"line":932,"type":"if","locations":[{"start":{"line":932,"column":4},"end":{"line":932,"column":4}},{"start":{"line":932,"column":4},"end":{"line":932,"column":4}}]},"110":{"line":947,"type":"cond-expr","locations":[{"start":{"line":947,"column":22},"end":{"line":947,"column":31}},{"start":{"line":947,"column":34},"end":{"line":947,"column":36}}]},"111":{"line":948,"type":"cond-expr","locations":[{"start":{"line":948,"column":26},"end":{"line":948,"column":33}},{"start":{"line":948,"column":36},"end":{"line":948,"column":38}}]},"112":{"line":1050,"type":"cond-expr","locations":[{"start":{"line":1050,"column":26},"end":{"line":1050,"column":33}},{"start":{"line":1050,"column":36},"end":{"line":1050,"column":38}}]},"113":{"line":1073,"type":"cond-expr","locations":[{"start":{"line":1073,"column":26},"end":{"line":1073,"column":33}},{"start":{"line":1073,"column":36},"end":{"line":1073,"column":38}}]},"114":{"line":1088,"type":"if","locations":[{"start":{"line":1088,"column":6},"end":{"line":1088,"column":6}},{"start":{"line":1088,"column":6},"end":{"line":1088,"column":6}}]},"115":{"line":1089,"type":"binary-expr","locations":[{"start":{"line":1089,"column":17},"end":{"line":1089,"column":23}},{"start":{"line":1089,"column":27},"end":{"line":1089,"column":29}}]},"116":{"line":1092,"type":"if","locations":[{"start":{"line":1092,"column":6},"end":{"line":1092,"column":6}},{"start":{"line":1092,"column":6},"end":{"line":1092,"column":6}}]},"117":{"line":1095,"type":"if","locations":[{"start":{"line":1095,"column":6},"end":{"line":1095,"column":6}},{"start":{"line":1095,"column":6},"end":{"line":1095,"column":6}}]},"118":{"line":1096,"type":"cond-expr","locations":[{"start":{"line":1096,"column":45},"end":{"line":1096,"column":57}},{"start":{"line":1096,"column":60},"end":{"line":1096,"column":69}}]},"119":{"line":1096,"type":"binary-expr","locations":[{"start":{"line":1096,"column":19},"end":{"line":1096,"column":25}},{"start":{"line":1096,"column":29},"end":{"line":1096,"column":42}}]},"120":{"line":1101,"type":"if","locations":[{"start":{"line":1101,"column":6},"end":{"line":1101,"column":6}},{"start":{"line":1101,"column":6},"end":{"line":1101,"column":6}}]}},"code":["\"use strict\";","","/**"," * Node's native modules"," */","var Stream = require('net').Stream","  , Socket = require('net').Socket;","","/**"," * External or custom modules"," */","var HashRing = require('hashring')","  , Connection = require('./connection')","  , Jackpot = require('jackpot')","  , Utils = require('./utils')","  , IssueLog = Connection.IssueLog;","","/**"," * Variable lookups"," */","var curry = Utils.curry;","","/**"," * Constructs a new memcached client"," *"," * @constructor"," * @param {Mixed} args Array, string or object with servers"," * @param {Object} options options"," * @api public"," */","function Client (args, options) {","  var servers = []","    , weights = {}","    , regular = 'localhost:11211'","    , key;","","  // Parse down the connection arguments","  switch (Object.prototype.toString.call(args)) {","    case '[object Object]':","      weights = args;","      servers = Object.keys(args);","      break;","","    case '[object Array]':","      servers = args.length ? args : [regular];","      break;","","    default:","      servers.push(args || regular);","      break;","  }","","  if (!servers.length) {","    throw new Error('No servers where supplied in the arguments');","  }","","  // merge with global and user config","  Utils.merge(this, Client.config);","  Utils.merge(this, options);","","  this.servers = servers;","  var compatibility = this.compatibility || this.compatiblity;","  this.HashRing = new HashRing(args, this.algorithm, {","    'compatibility': compatibility,","    'default port': compatibility === 'ketama' ? 11211 : null","  });","  this.connections = {};","  this.issues = [];","}","","// Allows users to configure the memcached globally or per memcached client","Client.config = {","    maxKeySize: 250         // max key size allowed by Memcached","  , maxExpiration: 2592000  // max expiration duration allowed by Memcached","  , maxValue: 1048576       // max length of value allowed by Memcached","  , activeQueries: 0","  , maxQueueSize: -1","  , algorithm: 'md5'        // hashing algorithm that is used for key mapping","  , compatibility: 'ketama' // hashring compatibility","","  , poolSize: 10            // maximal parallel connections","  , retries: 5              // Connection pool retries to pull connection from pool","  , factor: 3               // Connection pool retry exponential backoff factor","  , minTimeout: 1000        // Connection pool retry min delay before retrying","  , maxTimeout: 60000       // Connection pool retry max delay before retrying","  , randomize: false        // Connection pool retry timeout randomization","","  , reconnect: 18000000     // if dead, attempt reconnect each xx ms","  , timeout: 5000           // after x ms the server should send a timeout if we can't connect","  , failures: 5             // Number of times a server can have an issue before marked dead","  , failuresTimeout: 300000   // Time after which `failures` will be reset to original value, since last failure","  , retry: 30000            // When a server has an error, wait this amount of time before retrying","  , idle: 5000              // Remove connection from pool when no I/O after `idle` ms","  , remove: false           // remove server if dead if false, we will attempt to reconnect","  , redundancy: false       // allows you do re-distribute the keys over a x amount of servers","  , keyCompression: true    // compress keys if they are to large (md5)","  , namespace: ''           // sentinel to prepend to all memcache keys for namespacing the entries","  , debug: false            // Output the commands and responses","};","","// There some functions we don't want users to touch so we scope them","(function (nMemcached) {","  var LINEBREAK = '\\r\\n'","    , NOREPLY = ' noreply'","    , FLUSH = 1E3","    , BUFFER = 1E2","    , CONTINUE = 1E1","    , FLAG_JSON = 1<<1","    , FLAG_BINARY = 1<<2","    , FLAG_NUMERIC = 1<<3;","","  nMemcached.prototype.__proto__ = require('events').EventEmitter.prototype;","","  var memcached = nMemcached.prototype","    , privates = {}","    , undefined;","","  // Creates or generates a new connection for the give server, the callback","  // will receive the connection if the operation was successful","  memcached.connect = function connect(server, callback) {","    // Default port to 11211","    if(!server.match(/(.+):(\\d+)$/)) {","        server = server + ':11211';","    }","","    // server is dead, bail out","    if (server in this.issues && this.issues[server].failed) {","        return callback(false, false);","    }","","    // fetch from connection pool","    if (server in this.connections) {","      return this.connections[server].pull(callback);","    }","","    // No connection factory created yet, so we must build one","    var serverTokens = server[0] === '/'","        ? server","        : /(.*):(\\d+){1,}$/.exec(server).reverse()","      , memcached = this;","","    // Pop original string from array","    if (Array.isArray(serverTokens)) serverTokens.pop();","","    var sid = 0","      , manager;","","    /**","     * Generate a new connection pool manager.","     */","","    manager = new Jackpot(this.poolSize);","    manager.retries = memcached.retries;","    manager.factor = memcached.factor;","    manager.minTimeout = memcached.minTimeout;","    manager.maxTimeout = memcached.maxTimeout;","    manager.randomize = memcached.randomize;","","    manager.setMaxListeners(0);","","    manager.factory(function factory() {","      var S = Array.isArray(serverTokens)","          ? new Stream","          : new Socket","        , Manager = this","        , idleTimeout = function() {","            Manager.remove(this);","          }","        , streamError = function(e) {","            memcached.connectionIssue(e.toString(), S);","            Manager.remove(this);","        };","","      // config the Stream","      S.streamID = sid++;","      S.setTimeout(memcached.timeout);","      S.setNoDelay(true);","      S.setEncoding('utf8');","      S.metaData = [];","      S.responseBuffer = \"\";","      S.bufferArray = [];","      S.serverAddress = server;","      S.tokens = [].concat(serverTokens);","      S.memcached = memcached;","","      // Add the event listeners","      Utils.fuse(S, {","          close: function streamClose() {","            Manager.remove(this);","          }","        , data: curry(memcached, privates.buffer, S)","        , connect: function streamConnect() {","            // Jackpot handles any pre-connect timeouts by calling back","            // with the error object.","            this.setTimeout(this.memcached.idle, idleTimeout);","            // Jackpot handles any pre-connect errors, but does not handle errors","            // once a connection has been made, nor does Jackpot handle releasing","            // connections if an error occurs post-connect","            this.on('error', streamError);","          }","        , end: S.end","      });","","      // connect the net.Stream (or net.Socket) [port, hostname]","      S.connect.apply(S, S.tokens);","      return S;","    });","","    manager.on('error', function err(e) {","      if (memcached.debug) console.log('Connection error', e);","    });","","    this.connections[server] = manager;","","    // now that we have setup our connection factory we can allocate a new","    // connection","    this.connections[server].pull(callback);","  };","","  // Exposes buffer to test-suite","  memcached.buffer = function buffer() {","    return privates.buffer.apply(this, arguments);","  };","","  // Creates a multi stream, so it's easier to query agains multiple memcached","  // servers.","  memcached.multi = function memcachedMulti(keys, callback) {","    var map = {}","      , memcached = this","      , servers","      , i;","","    // gets all servers based on the supplied keys,","    // or just gives all servers if we don't have keys","    if (keys) {","      keys.forEach(function fetchMultipleServers(key) {","        var server = memcached.servers.length === 1","          ? memcached.servers[0]","          : memcached.HashRing.get(key);","","        if (map[server]){","          map[server].push(key);","        } else {","          map[server] = [key];","        }","      });","","      // store the servers","      servers = Object.keys(map);","    } else {","      servers = this.servers;","    }","","    i = servers.length;","","    while (i--) {","       //memcached.delegateCallback(this, servers[i], map[servers[i]], i, servers.length, callback);","      callback.call(this, servers[i], map[servers[i]], i, servers.length);","    }","  };","","  // Executes the command on the net.Stream, if no server is supplied it will","  // use the query.key to get the server from the HashRing","  memcached.command = function memcachedCommand(queryCompiler, server) {","","      this.activeQueries++;","      var query = queryCompiler();","","      if (this.activeQueries> this.maxQueueSize && this.maxQueueSize > 0){","          this.makeCallback(query.callback, \"over queue limit\", null);","          query = null;","          return;","      }","","      // generate a regular query,","      var redundancy = this.redundancy && this.redundancy < this.servers.length","      , queryRedundancy = query.redundancyEnabled","      , memcached = this;","","    // validate the arguments","    if (query.validate && !Utils.validateArg(query, this)) {","        this.activeQueries--;","        return;","    }","","    // try to find the correct server for this query","    if (!server) {","      // no need to do a hashring lookup if we only have one server assigned to","      // us","      if (this.servers.length === 1) {","        server = this.servers[0];","      } else {","        if (redundancy && queryRedundancy) {","          redundancy = this.HashRing.createRange(query.key, (this.redundancy + 1), true);","          server = redundancy.shift();","        } else {","          server = this.HashRing.get(query.key);","        }","      }","    }","","    // check if any server exists or and if the server is still alive","    // a server may not exist if the manager was never able to connect","    // to any server.","    if (!server || (server in this.issues && this.issues[server].failed)) {","      return query.callback && memcached.makeCallback(query.callback,new Error(['Server at', server, 'not available'].join(' ')));","    }","","    this.connect(server, function allocateMemcachedConnection(error, S) {","      if (memcached.debug) {","        query.command.split(LINEBREAK).forEach(function errors(line) {","          console.log(S.streamID + ' << ' + line);","        });","      }","","      // S not set if unable to connect to server","      if (!S) {","        var S = {","          serverAddress: server,","          tokens: server.split(':').reverse()","        }","        var message = error || 'Unable to connect to server';","        memcached.connectionIssue(message, S);","        return query.callback && memcached.makeCallback(query.callback,new Error(message));","","      }","","      // Other errors besides inability to connect to server","      if (error) {","        memcached.connectionIssue(error.toString(), S);","        return query.callback && memcached.makeCallback(query.callback,error);","      }","","      if (S.readyState !== 'open') {","        var message = 'Connection readyState is set to ' + S.readyState;","        memcached.connectionIssue(message, S);","        return query.callback && memcached.makeCallback(query.callback,new Error(message));","      }","","      // used for request timing","      query.start = Date.now();","      S.metaData.push(query);","      S.write(Utils.reallocString(query.command + LINEBREAK));","    });","","    // if we have redundancy enabled and the query is used for redundancy, than","    // we are going loop over the servers, check if we can reach them, and","    // connect to the correct net connection. because all redundancy queries are","    // executed with \"no reply\" we do not need to store the callback as there","    // will be no value to parse.","    if (redundancy && queryRedundancy) {","      queryRedundancy = queryCompiler(queryRedundancy);","","      redundancy.forEach(function each(server) {","        if (server in memcached.issues && memcached.issues[server].failed){","            return;","        }","","        memcached.connect(server, function allocateMemcachedConnection(error, S) {","          if (!S || error || S.readyState !== 'open') return;","          S.write(queryRedundancy.command + LINEBREAK);","        });","      });","    }","  };","","  // Logs all connection issues, and handles them off. Marking all requests as","  // cache misses.","  memcached.connectionIssue = function connectionIssue(error, S) {","    if (S && S.end) S.end();","","    var issues","      , server = S.serverAddress","      , memcached = this;","","    // check for existing issue logs, or create a new log","    if (server in this.issues) {","      issues = this.issues[server];","    } else {","      issues = this.issues[server] = new IssueLog({","          server: server","        , tokens: S.tokens","        , reconnect: this.reconnect","        , failures: this.failures","        , failuresTimeout: this.failuresTimeout","        , retry: this.retry","        , remove: this.remove","        , failOverServers: this.failOverServers || null","      });","","      // proxy the events","      Utils.fuse(issues, {","          issue: function issue(details) {","            memcached.emit('issue', details);","          }","        , failure: function failure(details) {","            memcached.emit('failure', details);","          }","        , reconnecting: function reconnect(details) {","            memcached.emit('reconnecting', details);","          }","        , reconnected: function reconnected(details) {","            memcached.emit('reconnect', details);","          }","        , remove: function remove(details) {","            // emit event and remove servers","            memcached.emit('remove', details);","            memcached.connections[server].end();","","            if (this.failOverServers && this.failOverServers.length) {","              memcached.HashRing.swap(server, this.failOverServers.shift());","            } else {","              memcached.HashRing.remove(server);","              memcached.emit('failure', details);","            }","          }","      });","","      // bumpt the event listener limit","      issues.setMaxListeners(0);","    }","","    // log the issue","    issues.log(error);","  };","","  // Kills all active connections","  memcached.end = function endMemcached() {","    var memcached = this;","","    Object.keys(this.connections).forEach(function closeConnection(key) {","      memcached.connections[key].free(0);","    });","  };","","  // These do not need to be publicly available as it's one of the most important","  // parts of the whole client, the parser commands:","  privates.parsers = {","    // handle error responses","    'NOT_FOUND': function notfound(tokens, dataSet, err) {","      return [CONTINUE, false];","    }","","  , 'NOT_STORED': function notstored(tokens, dataSet, err) {","      var errObj = new Error('Item is not stored');","      errObj.notStored = true;","      err.push(errObj);","      return [CONTINUE, false];","    }","","  , 'ERROR': function error(tokens, dataSet, err) {","      err.push(new Error('Received an ERROR response'));","      return [FLUSH, false];","    }","","  , 'CLIENT_ERROR': function clienterror(tokens, dataSet, err) {","      err.push(new Error(tokens.splice(1).join(' ')));","      return [CONTINUE, false];","    }","","  , 'SERVER_ERROR': function servererror(tokens, dataSet, err, queue, S, memcached) {","      (memcached || this.memcached).connectionIssue(tokens.splice(1).join(' '), this);","      return [CONTINUE, false];","    }","","    // keyword based responses","  , 'STORED': function stored(tokens, dataSet) {","      return [CONTINUE, true];","    }","","  , 'TOUCHED': function touched(tokens, dataSet) {","        return [CONTINUE, true];","    }","","  , 'DELETED': function deleted(tokens, dataSet) {","      return [CONTINUE, true];","    }","","  , 'OK': function ok(tokens, dataSet) {","      return [CONTINUE, true];","    }","","  , 'EXISTS': function exists(tokens, dataSet) {","      return [CONTINUE, false];","    }","","  , 'END': function end(tokens, dataSet, err, queue) {","      if (!queue.length) queue.push(undefined);","      return [FLUSH, true];","    }","","    // value parsing:","  , 'VALUE': function value(tokens, dataSet, err, queue) {","      var key = tokens[1]","        , flag = +tokens[2]","        , dataLen = tokens[3] // length of dataSet in raw bytes","        , cas = tokens[4]","        , multi = this.metaData[0] && this.metaData[0].multi || cas","          ? {}","          : false","        , tmp;","","      // In parse data there is an '||' passing us the content of token","      // if dataSet is empty. This may be fine for other types of responses,","      // in the case of an empty string being stored in a key, it will","      // result in unexpected behavior:","      // https://github.com/3rd-Eden/node-memcached/issues/64","      if (dataLen === '0') {","        dataSet = '';","      }","","      switch (flag) {","        case FLAG_JSON:","          dataSet = JSON.parse(dataSet);","          break;","        case FLAG_NUMERIC:","          dataSet = +dataSet;","          break;","        case FLAG_BINARY:","          tmp = new Buffer(dataSet.length);","          tmp.write(dataSet, 0, 'binary');","          dataSet = tmp;","          break;","        }","","      // Add to queue as multiple get key key key key key returns multiple values","      if (!multi) {","        queue.push(dataSet);","      } else {","        multi[key] = dataSet;","        if (cas) multi.cas = cas;","        queue.push(multi);","      }","","      return [BUFFER, false];","    }","","  , 'INCRDECR': function incrdecr(tokens) {","      return [CONTINUE, +tokens[1]];","    }","","  , 'STAT': function stat(tokens, dataSet, err, queue) {","      queue.push([tokens[1], /^\\d+$/.test(tokens[2]) ? +tokens[2] : tokens[2]]);","      return [BUFFER, true];","    }","","  , 'VERSION': function version(tokens, dataSet) {","      var versionTokens = /(\\d+)(?:\\.)(\\d+)(?:\\.)(\\d+)$/.exec(tokens[1]);","","      return [CONTINUE, {","        server: this.serverAddress","      , version: versionTokens[0]","      , major: versionTokens[1] || 0","      , minor: versionTokens[2] || 0","      , bugfix: versionTokens[3] || 0","      }];","    }","","  , 'ITEM': function item(tokens, dataSet, err, queue) {","      queue.push({","        key: tokens[1]","      , b: +tokens[2].substr(1)","      , s: +tokens[4]","      });","","      return [BUFFER, false];","    }","    // Amazon-specific memcached configuration information, used for node","    // auto-discovery.","  , 'CONFIG': function() {","      return [CONTINUE, this.bufferArray[0]];","    }","  };","","  function resultSetIsEmpty(resultSet) {","    return !resultSet || (resultSet.length === 1 && !resultSet[0]);","  }","","  // Parses down result sets","  privates.resultParsers = {","    // combines the stats array, in to an object","    'stats': function stats(resultSet) {","      var response = {};","      if (resultSetIsEmpty(resultSet)) return response;","","      // add references to the retrieved server","      response.server = this.serverAddress;","","      // Fill the object","      resultSet.forEach(function each(statSet) {","        if (statSet) response[statSet[0]] = statSet[1];","      });","","      return response;","    }","","    // the settings uses the same parse format as the regular stats","  , 'stats settings': function settings() {","      return privates.resultParsers.stats.apply(this, arguments);","    }","","    // Group slabs by slab id","  , 'stats slabs': function slabs(resultSet) {","      var response = {};","      if (resultSetIsEmpty(resultSet)) return response;","","      // add references to the retrieved server","      response.server = this.serverAddress;","","      // Fill the object","      resultSet.forEach(function each(statSet) {","        if (statSet) {","          var identifier = statSet[0].split(':');","","          if (!response[identifier[0]]) response[identifier[0]] = {};","          response[identifier[0]][identifier[1]] = statSet[1];","        }","      });","","      return response;","    }","","  , 'stats items': function items(resultSet) {","      var response = {};","      if (resultSetIsEmpty(resultSet)) return response;","","      // add references to the retrieved server","      response.server = this.serverAddress;","","      // Fill the object","      resultSet.forEach(function each(statSet) {","        if (statSet && statSet.length > 1) {","          var identifier = statSet[0].split(':');","","          if (!response[identifier[1]]) response[identifier[1]] = {};","          response[identifier[1]][identifier[2]] = statSet[1];","        }","      });","","      return response;","    }","  };","","  // Generates a RegExp that can be used to check if a chunk is memcached response identifier","  privates.allCommands = new RegExp('^(?:' + Object.keys(privates.parsers).join('|') + '|\\\\d' + ')');","  privates.bufferedCommands = new RegExp('^(?:' + Object.keys(privates.parsers).join('|') + ')');","","  // When working with large chunks of responses, node chunks it in to pieces.","  // So we might have half responses. So we are going to buffer up the buffer","  // and user our buffered buffer to query // against. Also when you execute","  // allot of .writes to the same stream, node will combine the responses in to","  // one response stream. With no indication where it had cut the data. So it","  // can be it cuts inside the value response, or even right in the middle of","  // a line-break, so we need to make sure, the last piece in the buffer is","  // a LINEBREAK because that is all what is sure about the Memcached Protocol,","  // all responds end with them.","  privates.buffer = function BufferBuffer(S, BufferStream) {","    S.responseBuffer += BufferStream;","","    // only call transform the data once we are sure, 100% sure, that we valid","    // response ending","    if (S.responseBuffer.substr(S.responseBuffer.length - 2) === LINEBREAK) {","      S.responseBuffer = Utils.reallocString(S.responseBuffer);","","      var chunks = S.responseBuffer.split(LINEBREAK);","","      if (this.debug) {","        chunks.forEach(function each(line) {","          console.log(S.streamID + ' >> ' + line);","        });","      }","","      // Fix zero-line endings in the middle","      var chunkLength = (chunks.length-1);","      if (chunks[chunkLength].length === 0) chunks.splice(chunkLength, 1);","","      S.responseBuffer = \"\"; // clear!","      this.rawDataReceived(S, S.bufferArray = S.bufferArray.concat(chunks));","    }","  };","","  memcached.delegateCallback = function(){","        this.activeQueries--;","        var master = arguments[0];","        var cb = arguments[arguments.length-1];","        var args = Array.prototype.slice.call(arguments, 1, arguments.length-1);","        cb.apply(master, args);","  };","","  memcached.makeCallback = function(cb){","       this.activeQueries--;","       var args = Array.prototype.slice.call(arguments, 1);","       cb.apply(this, args); //loose first","  };","","  // The actual parsers function that scan over the responseBuffer in search of","  // Memcached response identifiers. Once we have found one, we will send it to","  // the dedicated parsers that will transform the data in a human readable","  // format, deciding if we should queue it up, or send it to a callback fn.","  memcached.rawDataReceived = function rawDataReceived(S) {","    var queue = []","      , token","      , tokenSet","      , dataSet","      , resultSet","      , metaData","      , err = []","      , tmp;","","    while(S.bufferArray.length && privates.allCommands.test(S.bufferArray[0])) {","      token = S.bufferArray.shift();","      tokenSet = token.split(' ');","","      if (/^\\d+$/.test(tokenSet[0])) {","          // special case for \"config get cluster\"","          // Amazon-specific memcached configuration information, see aws","          // documentation regarding adding auto-discovery to your client library.","          // Example response of a cache cluster containing three nodes:","          //   configversion\\n","          //   hostname|ip-address|port hostname|ip-address|port hostname|ip-address|port\\n\\r\\n","          if (/(([-.a-zA-Z0-9]+)\\|(\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b)\\|(\\d+))/.test(S.bufferArray[0])) {","              tokenSet.unshift('CONFIG');","          }","          // special case for digit only's these are responses from INCR and DECR","          else {","            tokenSet.unshift('INCRDECR');","          }","      }","      // special case for value, it's required that it has a second response!","      // add the token back, and wait for the next response, we might be","      // handling a big ass response here.","      if (tokenSet[0] === 'VALUE' && S.bufferArray.indexOf('END') === -1) {","        return S.bufferArray.unshift(token);","      }","","      // check for dedicated parser","      if (privates.parsers[tokenSet[0]]) {","","        // fetch the response content","        if (tokenSet[0] === 'VALUE') {","          dataSet = Utils.unescapeValue(S.bufferArray.shift());","        }","","        resultSet = privates.parsers[tokenSet[0]].call(S, tokenSet, dataSet || token, err, queue, this);","","        // check how we need to handle the resultSet response","        switch (resultSet.shift()) {","          case BUFFER:","            break;","","          case FLUSH:","            metaData = S.metaData.shift();","            resultSet = queue;","","            // if we have a callback, call it","            if (metaData && metaData.callback) {","              metaData.execution = Date.now() - metaData.start;","                this.delegateCallback(","                  metaData","                , err.length ? err : err[0]","","                  // see if optional parsing needs to be applied to make the result set more readable","                , privates.resultParsers[metaData.type]","                    ? privates.resultParsers[metaData.type].call(S, resultSet, err)","                    : !Array.isArray(queue) || queue.length > 1 ? queue : queue[0]","                ,metaData.callback","              );","            }","","            queue.length = err.length = 0;","            break;","","          default:","            metaData = S.metaData.shift();","","            if (metaData && metaData.callback) {","              metaData.execution = Date.now() - metaData.start;","              this.delegateCallback(metaData, err.length > 1 ? err : err[0], resultSet[0], metaData.callback);","            }","","            err.length = 0;","            break;","        }","      } else {","        // handle unkown responses","        metaData = S.metaData.shift();","        if (metaData && metaData.callback){","          metaData.execution = Date.now() - metaData.start;","            this.delegateCallback(metaData, new Error('Unknown response from the memcached server: \"' + token + '\"'), false, metaData.callback);","        }","      }","","      // cleanup","      dataSet = tokenSet = metaData = undefined;","","      // check if we need to remove an empty item from the array, as splitting on /r/n might cause an empty","      // item at the end..","      if (S.bufferArray[0] === '') S.bufferArray.shift();","    }","  };","","  // Small wrapper function that only executes errors when we have a callback","  privates.errorResponse = function errorResponse(error, callback) {","    if (typeof callback === 'function') {","        memcached.makeCallback(callback,error, false);","    }","","    return false;","  };","","  // This is where the actual Memcached API layer begins:","  memcached.touch = function touch(key, lifetime, callback) {","    var fullkey = this.namespace + key;","    this.command(function touchCommand() {","      return {","          key: fullkey","        , callback: callback","        , lifetime: lifetime","        , validate: [['key', String], ['lifetime', Number], ['callback', Function]]","        , type: 'touch'","        , command: ['touch', fullkey, lifetime].join(' ')","      };","    });","  };","","  memcached.get = function get(key, callback) {","    if (Array.isArray(key)) return this.getMulti.apply(this, arguments);","","    var fullkey = this.namespace + key;","    this.command(function getCommand(noreply) {","      return {","          key: fullkey","        , callback: callback","        , validate: [['key', String], ['callback', Function]]","        , type: 'get'","        , command: 'get ' + fullkey","      };","    });","  };","","  // the difference between get and gets is that gets, also returns a cas value","  // and gets doesn't support multi-gets at this moment.","  memcached.gets = function get(key, callback) {","    var fullkey = this.namespace + key;","    this.command(function getCommand(noreply) {","      return {","          key: fullkey","        , callback: callback","        , validate: [['key', String], ['callback', Function]]","        , type: 'gets'","        , command: 'gets ' + fullkey","      };","    });","  };","","  // Handles get's with multiple keys","  memcached.getMulti = function getMulti(keys, callback) {","    var memcached = this","      , responses = {}","      , errors = []","      , calls;","","    if (memcached.namespace.length) keys = keys.map(function compile(key){","      return memcached.namespace + key;","    });","","    // handle multiple responses and cache them untill we receive all.","    function handle(err, results) {","      if (err) {","        errors.push(err);","      }","","      // add all responses to the array","      (Array.isArray(results) ? results : [results]).forEach(function each(value) {","        if (value && memcached.namespace.length) {","          var ns_key = Object.keys(value)[0]","            , newvalue = {};","","          newvalue[ns_key.replace(memcached.namespace, '')] = value[ns_key];","          Utils.merge(responses, newvalue);","        } else {","          Utils.merge(responses, value);","        }","      });","","      if (!--calls){","          callback(errors.length ? errors : undefined, responses);","      }","    }","","    this.multi(keys, function multi(server, key, index, totals) {","      if (!calls) calls = totals;","","      memcached.command(function getMultiCommand(noreply) {","        return {","            callback: handle","          , multi: true","          , type: 'get'","          , command: 'get ' + key.join(' ')","          , key: keys","          , validate: [['key', Array], ['callback', Function]]","        };","      }, server);","    });","  };","","  // As all command nearly use the same syntax we are going to proxy them all to","  // this function to ease maintenance. This is possible because most set","  // commands will use the same syntax for the Memcached server. Some commands","  // do not require a lifetime and a flag, but the memcached server is smart","  // enough to ignore those.","  privates.setters = function setters(type, validate, key, value, lifetime, callback, cas) {","    var fullkey = this.namespace + key;","    var flag = 0","      , valuetype = typeof value","      , length;","","    if (Buffer.isBuffer(value)) {","      flag = FLAG_BINARY;","      value = value.toString('binary');","    } else if (valuetype === 'number') {","      flag = FLAG_NUMERIC;","      value = value.toString();","    } else if (valuetype !== 'string') {","      flag = FLAG_JSON;","      value = JSON.stringify(value);","    }","","    value = Utils.escapeValue(value);","","    length = Buffer.byteLength(value);","    if (length > this.maxValue) {","      return privates.errorResponse(new Error('The length of the value is greater than ' + this.maxValue), callback);","    }","","    this.command(function settersCommand(noreply) {","      return {","          key: fullkey","        , callback: callback","        , lifetime: lifetime","        , value: value","        , cas: cas","        , validate: validate","        , type: type","        , redundancyEnabled: false","        , command: [type, fullkey, flag, lifetime, length].join(' ') +","               (cas ? ' ' + cas : '') +","               (noreply ? NOREPLY : '') +","               LINEBREAK + value","      };","    });","  };","","  // Curry the function and so we can tell the type our private set function","  memcached.set = curry(undefined, privates.setters","    , 'set'","    , [","          ['key', String]","        , ['value', String]","        , ['lifetime', Number]","        , ['callback', Function]","      ]","  );","","  memcached.replace = curry(undefined, privates.setters","    , 'replace'","    , [","          ['key', String]","        , ['value', String]","        , ['lifetime', Number]","        , ['callback', Function]","      ]","  );","","  memcached.add = curry(undefined, privates.setters","    , 'add'","    , [","          ['key', String]","        , ['value', String]","        , ['lifetime', Number]","        , ['callback', Function]","      ]","  );","","  memcached.cas = function checkandset(key, value, cas, lifetime, callback) {","    privates.setters.call(this","      , 'cas'","      , [","            ['key', String]","          , ['value', String]","          , ['lifetime', Number]","          , ['callback', Function]","        ]","      , key","      , value","      , lifetime","      , callback","      , cas","    );","  };","","  memcached.append = function append(key, value, callback) {","    privates.setters.call(this","      , 'append'","      , [","            ['key', String]","          , ['value', String]","          , ['lifetime', Number]","          , ['callback', Function]","        ]","      , key","      , value","      , 0","      , callback","    );","  };","","  memcached.prepend = function prepend(key, value, callback) {","    privates.setters.call(this","      , 'prepend'","      , [","            ['key', String]","          , ['value', String]","          , ['lifetime', Number]","          , ['callback', Function]","        ]","      , key","      , value","      , 0","      , callback","    );","  };","","  // Small handler for incr and decr's","  privates.incrdecr = function incrdecr(type, key, value, callback) {","    var fullkey = this.namespace + key;","    this.command(function incredecrCommand(noreply) {","      return {","          key: fullkey","        , callback: callback","        , value: value","        , validate: [","              ['key', String]","            , ['value', Number]","            , ['callback', Function]","          ]","        , type: type","        , redundancyEnabled: true","        , command: [type, fullkey, value].join(' ') +","               (noreply ? NOREPLY : '')","      };","    });","  };","","  // Curry the function and so we can tell the type our private incrdecr","  memcached.increment = memcached.incr = curry(undefined, privates.incrdecr, 'incr');","  memcached.decrement = memcached.decr = curry(undefined, privates.incrdecr, 'decr');","","  // Deletes the keys from the servers","  memcached.del = function del(key, callback){","    var fullkey = this.namespace + key;","    this.command(function deleteCommand(noreply) {","      return {","          key: fullkey","        , callback: callback","        , validate: [","              ['key', String]","            , ['callback', Function]","          ]","        , type: 'delete'","        , redundancyEnabled: true","        , command: 'delete ' + fullkey +","               (noreply ? NOREPLY : '')","      };","    });","  };","  memcached['delete'] = memcached.del;","","  // Small wrapper that handle single keyword commands such as FLUSH ALL, VERSION and STAT","  privates.singles = function singles(type, callback) {","    var memcached = this","      , responses = []","      , errors","      , calls;","","      // handle multiple servers","    function handle(err, results) {","      if (err) {","        errors = errors || [];","        errors.push(err);","      }","      if (results) responses = responses.concat(results);","","      // multi calls should ALWAYS return an array!","      if (!--calls) {","          callback(errors && errors.length ? errors.pop() : undefined, responses);","      }","    }","","    this.multi(false, function multi(server, keys, index, totals) {","      if (!calls) calls = totals;","","      memcached.command(function singlesCommand(noreply) {","        return {","            callback: handle","          , type: type","          , command: type","        };","      }, server);","    });","  };","","  // Curry the function and so we can tell the type our private singles","  memcached.version  = curry(undefined, privates.singles, 'version');","  memcached.flush = curry(undefined, privates.singles, 'flush_all');","  memcached.stats = curry(undefined, privates.singles, 'stats');","  memcached.settings = curry(undefined, privates.singles, 'stats settings');","  memcached.slabs = curry(undefined, privates.singles, 'stats slabs');","  memcached.items = curry(undefined, privates.singles, 'stats items');","","  // aliases","  memcached.flushAll = memcached.flush;","  memcached.statsSettings = memcached.settings;","  memcached.statsSlabs = memcached.slabs;","  memcached.statsItems = memcached.items;","","","  // You need to use the items dump to get the correct server and slab settings","  // see simple_cachedump.js for an example","  memcached.cachedump = function cachedump(server, slabid, number, callback) {","    this.command(function cachedumpCommand(noreply) {","      return {","          callback: callback","        , number: number","        , slabid: slabid","        , validate: [","              ['number', Number]","            , ['slabid', Number]","            , ['callback', Function]","          ]","        , type: 'stats cachedump'","        , command: 'stats cachedump ' + slabid + ' ' + number","      };","    }, server);","  };","})(Client);","","module.exports = Client;",""],"l":{"6":1,"12":1,"21":1,"31":1,"32":0,"38":0,"40":0,"41":0,"42":0,"45":0,"46":0,"49":0,"50":0,"53":0,"54":0,"58":0,"59":0,"61":0,"62":0,"63":0,"67":0,"68":0,"72":1,"102":1,"103":1,"112":1,"114":1,"120":1,"122":0,"123":0,"127":0,"128":0,"132":0,"133":0,"137":0,"143":0,"145":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"159":0,"161":0,"162":0,"167":0,"170":0,"171":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"187":0,"189":0,"195":0,"199":0,"205":0,"206":0,"209":0,"210":0,"213":0,"217":0,"221":1,"222":0,"227":1,"228":0,"235":0,"236":0,"237":0,"241":0,"242":0,"244":0,"249":0,"251":0,"254":0,"256":0,"258":0,"264":1,"266":0,"267":0,"269":0,"270":0,"271":0,"272":0,"276":0,"281":0,"282":0,"283":0,"287":0,"290":0,"291":0,"293":0,"294":0,"295":0,"297":0,"305":0,"306":0,"309":0,"310":0,"311":0,"312":0,"317":0,"318":0,"322":0,"323":0,"324":0,"329":0,"330":0,"331":0,"334":0,"335":0,"336":0,"337":0,"341":0,"342":0,"343":0,"351":0,"352":0,"354":0,"355":0,"356":0,"359":0,"360":0,"361":0,"369":1,"370":0,"372":0,"377":0,"378":0,"380":0,"392":0,"394":0,"397":0,"400":0,"403":0,"407":0,"408":0,"410":0,"411":0,"413":0,"414":0,"420":0,"424":0,"428":1,"429":0,"431":0,"432":0,"438":1,"441":0,"445":0,"446":0,"447":0,"448":0,"452":0,"453":0,"457":0,"458":0,"462":0,"463":0,"468":0,"472":0,"476":0,"480":0,"484":0,"488":0,"489":0,"494":0,"508":0,"509":0,"512":0,"514":0,"515":0,"517":0,"518":0,"520":0,"521":0,"522":0,"523":0,"527":0,"528":0,"530":0,"531":0,"532":0,"535":0,"539":0,"543":0,"544":0,"548":0,"550":0,"560":0,"566":0,"571":0,"575":1,"576":0,"580":1,"583":0,"584":0,"587":0,"590":0,"591":0,"594":0,"599":0,"604":0,"605":0,"608":0,"611":0,"612":0,"613":0,"615":0,"616":0,"620":0,"624":0,"625":0,"628":0,"631":0,"632":0,"633":0,"635":0,"636":0,"640":0,"645":1,"646":1,"657":1,"658":0,"662":0,"663":0,"665":0,"667":0,"668":0,"669":0,"674":0,"675":0,"677":0,"678":0,"682":1,"683":0,"684":0,"685":0,"686":0,"687":0,"690":1,"691":0,"692":0,"693":0,"700":1,"701":0,"710":0,"711":0,"712":0,"714":0,"721":0,"722":0,"726":0,"732":0,"733":0,"737":0,"740":0,"741":0,"744":0,"747":0,"749":0,"752":0,"753":0,"756":0,"757":0,"758":0,"770":0,"771":0,"774":0,"776":0,"777":0,"778":0,"781":0,"782":0,"786":0,"787":0,"788":0,"789":0,"794":0,"798":0,"803":1,"804":0,"805":0,"808":0,"812":1,"813":0,"814":0,"815":0,"826":1,"827":0,"829":0,"830":0,"831":0,"843":1,"844":0,"845":0,"846":0,"857":1,"858":0,"863":0,"864":0,"868":1,"869":0,"870":0,"874":0,"875":0,"876":0,"879":0,"880":0,"882":0,"886":0,"887":0,"891":0,"892":0,"894":0,"895":0,"912":1,"913":0,"914":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"929":0,"931":0,"932":0,"933":0,"936":0,"937":0,"955":1,"965":1,"975":1,"985":1,"986":0,"1002":1,"1003":0,"1018":1,"1019":0,"1035":1,"1036":0,"1037":0,"1038":0,"1056":1,"1057":1,"1060":1,"1061":0,"1062":0,"1063":0,"1077":1,"1080":1,"1081":0,"1087":1,"1088":0,"1089":0,"1090":0,"1092":0,"1095":0,"1096":0,"1100":0,"1101":0,"1103":0,"1104":0,"1114":1,"1115":1,"1116":1,"1117":1,"1118":1,"1119":1,"1122":1,"1123":1,"1124":1,"1125":1,"1130":1,"1131":0,"1132":0,"1148":1}},"/home/travis/build/npmtest/node-npmtest-memcached/memcached/lib/connection.js":{"path":"/home/travis/build/npmtest/node-npmtest-memcached/memcached/lib/connection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"ping","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}}},"2":{"name":"stdoutdata","line":16,"loc":{"start":{"line":16,"column":25},"end":{"line":16,"column":52}}},"3":{"name":"stderrdata","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":52}}},"4":{"name":"IssueLog","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":25}}},"5":{"name":"log","line":46,"loc":{"start":{"line":46,"column":13},"end":{"line":46,"column":36}}},"6":{"name":"failuresReset","line":73,"loc":{"start":{"line":73,"column":23},"end":{"line":73,"column":48}}},"7":{"name":"getDetails","line":79,"loc":{"start":{"line":79,"column":7},"end":{"line":79,"column":30}}},"8":{"name":"attemptRetry","line":100,"loc":{"start":{"line":100,"column":22},"end":{"line":100,"column":47}}},"9":{"name":"attemptReconnect","line":107,"loc":{"start":{"line":107,"column":26},"end":{"line":107,"column":55}}},"10":{"name":"pingpong","line":113,"loc":{"start":{"line":113,"column":23},"end":{"line":113,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":27}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":25}},"4":{"start":{"line":11,"column":0},"end":{"line":25,"column":1}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":52}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":32}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":45}},"8":{"start":{"line":16,"column":2},"end":{"line":19,"column":5}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":63}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":16}},"11":{"start":{"line":21,"column":2},"end":{"line":24,"column":5}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":74}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":16}},"14":{"start":{"line":27,"column":0},"end":{"line":41,"column":1}},"15":{"start":{"line":28,"column":2},"end":{"line":28,"column":21}},"16":{"start":{"line":29,"column":2},"end":{"line":29,"column":21}},"17":{"start":{"line":30,"column":2},"end":{"line":30,"column":22}},"18":{"start":{"line":31,"column":2},"end":{"line":31,"column":22}},"19":{"start":{"line":32,"column":2},"end":{"line":32,"column":38}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":25}},"21":{"start":{"line":35,"column":2},"end":{"line":35,"column":17}},"22":{"start":{"line":36,"column":2},"end":{"line":36,"column":36}},"23":{"start":{"line":37,"column":2},"end":{"line":37,"column":34}},"24":{"start":{"line":39,"column":2},"end":{"line":39,"column":26}},"25":{"start":{"line":40,"column":2},"end":{"line":40,"column":26}},"26":{"start":{"line":43,"column":0},"end":{"line":43,"column":38}},"27":{"start":{"line":44,"column":0},"end":{"line":44,"column":32}},"28":{"start":{"line":46,"column":0},"end":{"line":71,"column":2}},"29":{"start":{"line":47,"column":2},"end":{"line":47,"column":19}},"30":{"start":{"line":49,"column":2},"end":{"line":49,"column":21}},"31":{"start":{"line":50,"column":2},"end":{"line":50,"column":56}},"32":{"start":{"line":54,"column":2},"end":{"line":55,"column":93}},"33":{"start":{"line":55,"column":4},"end":{"line":55,"column":93}},"34":{"start":{"line":57,"column":2},"end":{"line":61,"column":3}},"35":{"start":{"line":58,"column":4},"end":{"line":58,"column":23}},"36":{"start":{"line":59,"column":4},"end":{"line":59,"column":59}},"37":{"start":{"line":60,"column":4},"end":{"line":60,"column":44}},"38":{"start":{"line":63,"column":2},"end":{"line":63,"column":63}},"39":{"start":{"line":63,"column":28},"end":{"line":63,"column":63}},"40":{"start":{"line":65,"column":2},"end":{"line":65,"column":60}},"41":{"start":{"line":65,"column":19},"end":{"line":65,"column":60}},"42":{"start":{"line":67,"column":2},"end":{"line":70,"column":3}},"43":{"start":{"line":68,"column":6},"end":{"line":68,"column":41}},"44":{"start":{"line":69,"column":6},"end":{"line":69,"column":69}},"45":{"start":{"line":73,"column":0},"end":{"line":76,"column":2}},"46":{"start":{"line":75,"column":2},"end":{"line":75,"column":61}},"47":{"start":{"line":78,"column":0},"end":{"line":98,"column":3}},"48":{"start":{"line":80,"column":4},"end":{"line":80,"column":17}},"49":{"start":{"line":82,"column":4},"end":{"line":82,"column":29}},"50":{"start":{"line":83,"column":4},"end":{"line":83,"column":29}},"51":{"start":{"line":84,"column":4},"end":{"line":84,"column":33}},"52":{"start":{"line":86,"column":4},"end":{"line":94,"column":5}},"53":{"start":{"line":87,"column":6},"end":{"line":87,"column":35}},"54":{"start":{"line":88,"column":6},"end":{"line":88,"column":45}},"55":{"start":{"line":90,"column":6},"end":{"line":90,"column":67}},"56":{"start":{"line":91,"column":6},"end":{"line":91,"column":63}},"57":{"start":{"line":92,"column":6},"end":{"line":92,"column":94}},"58":{"start":{"line":93,"column":6},"end":{"line":93,"column":107}},"59":{"start":{"line":96,"column":4},"end":{"line":96,"column":15}},"60":{"start":{"line":100,"column":0},"end":{"line":105,"column":2}},"61":{"start":{"line":101,"column":2},"end":{"line":101,"column":23}},"62":{"start":{"line":102,"column":2},"end":{"line":102,"column":18}},"63":{"start":{"line":103,"column":2},"end":{"line":103,"column":22}},"64":{"start":{"line":104,"column":2},"end":{"line":104,"column":22}},"65":{"start":{"line":107,"column":0},"end":{"line":130,"column":2}},"66":{"start":{"line":108,"column":2},"end":{"line":108,"column":19}},"67":{"start":{"line":109,"column":2},"end":{"line":109,"column":34}},"68":{"start":{"line":110,"column":2},"end":{"line":110,"column":42}},"69":{"start":{"line":113,"column":2},"end":{"line":129,"column":5}},"70":{"start":{"line":115,"column":4},"end":{"line":118,"column":5}},"71":{"start":{"line":116,"column":6},"end":{"line":116,"column":65}},"72":{"start":{"line":117,"column":6},"end":{"line":117,"column":77}},"73":{"start":{"line":120,"column":4},"end":{"line":120,"column":45}},"74":{"start":{"line":122,"column":4},"end":{"line":122,"column":35}},"75":{"start":{"line":123,"column":4},"end":{"line":123,"column":30}},"76":{"start":{"line":124,"column":4},"end":{"line":124,"column":25}},"77":{"start":{"line":125,"column":4},"end":{"line":125,"column":41}},"78":{"start":{"line":128,"column":4},"end":{"line":128,"column":65}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":27},"end":{"line":13,"column":31}}]},"2":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":28}},{"start":{"line":50,"column":32},"end":{"line":50,"column":54}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"4":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":19}},{"start":{"line":54,"column":23},"end":{"line":54,"column":60}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"6":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":19}},{"start":{"line":57,"column":23},"end":{"line":57,"column":35}}]},"7":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"8":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"9":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"10":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"12":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":26},"end":{"line":116,"column":37}},{"start":{"line":116,"column":41},"end":{"line":116,"column":63}}]}},"code":["\"use strict\";","","var EventEmitter = require('events').EventEmitter","  , spawn = require('child_process').spawn","  , Utils = require('./utils')","  , util = require('util');","","exports.IssueLog = IssueLog;         // connection issue handling","exports.Available = ping;            // connection availablity","","function ping (host, callback) {","  var isWin = process.platform.indexOf('win') === 0; // win32 or win64","  var arg = isWin ? '-n' : '-c';","  var pong = spawn('ping', [arg, '3', host]); // only ping 3 times","","  pong.stdout.on('data', function stdoutdata (data) {","    callback(false, data.toString().split('\\n')[0].substr(14));","    pong.kill();","  });","","  pong.stderr.on('data', function stderrdata (data) {","    callback(new Error(data.toString().split('\\n')[0].substr(14)), false);","    pong.kill();","  });","}","","function IssueLog (args) {","  this.config = args;","  this.messages = [];","  this.failed = false;","  this.locked = false;","  this.isScheduledToReconnect = false;","","  this.totalFailures = 0;","  this.retry = 0;","  this.totalReconnectsAttempted = 0;","  this.totalReconnectsSuccess = 0;","","  Utils.merge(this, args);","  EventEmitter.call(this);","}","","util.inherits(IssueLog, EventEmitter);","var issues = IssueLog.prototype;","","issues.log = function log (message) {","  var issue = this;","","  this.failed = true;","  this.messages.push(message || 'No message specified');","","  // All failures must occur within `failuresTimeout` ms from the initial","  // failure in order for node to be disconnected or removed.","  if (this.failures && this.failures == this.config.failures)","    this.failuresResetId = setTimeout(issue.failuresReset.bind(issue), this.failuresTimeout);","","  if (this.failures && !this.locked) {","    this.locked = true;","    setTimeout(issue.attemptRetry.bind(issue), this.retry);","    return this.emit('issue', this.details);","  }","","  if (this.failuresResetId) clearTimeout(this.failuresResetId);","","  if (this.remove) return this.emit('remove', this.details);","","  if (!this.isScheduledToReconnect) {","      this.isScheduledToReconnect = true;","      setTimeout(issue.attemptReconnect.bind(issue), this.reconnect);","  }","};","","issues.failuresReset = function failuresReset() {","  //this.failures = this.config.failures;","  Utils.merge(this, JSON.parse(JSON.stringify(this.config)));","};","","Object.defineProperty(issues, 'details', {","  get: function getDetails () {","    var res = {};","","    res.server = this.server;","    res.tokens = this.tokens;","    res.messages = this.messages;","","    if (this.failures) {","      res.failures = this.failures;","      res.totalFailures = this.totalFailures;","    } else {","      res.totalReconnectsAttempted = this.totalReconnectsAttempted;","      res.totalReconnectsSuccess = this.totalReconnectsSuccess;","      res.totalReconnectsFailed = this.totalReconnectsAttempted - this.totalReconnectsSuccess;","      res.totalDownTime = (res.totalReconnectsFailed * this.reconnect) + (this.totalFailures * this.retry);","    }","","    return res;","  }","});","","issues.attemptRetry = function attemptRetry () {","  this.totalFailures++;","  this.failures--;","  this.failed = false;","  this.locked = false;","};","","issues.attemptReconnect = function attemptReconnect () {","  var issue = this;","  this.totalReconnectsAttempted++;","  this.emit('reconnecting', this.details);","","  // Ping the server","  ping(this.tokens[1], function pingpong (err) {","    // still no access to the server","    if (err) {","      issue.messages.push(err.message || 'No message specified');","      return setTimeout(issue.attemptReconnect.bind(issue), issue.reconnect);","    }","","    issue.emit('reconnected', issue.details);","","    issue.totalReconnectsSuccess++;","    issue.messages.length = 0;","    issue.failed = false;","    issue.isScheduledToReconnect = false;","","    // we connected again, so we are going through the whole cycle again","    Utils.merge(issue, JSON.parse(JSON.stringify(issue.config)));","  });","};",""],"l":{"3":1,"8":1,"9":1,"11":1,"12":0,"13":0,"14":0,"16":0,"17":0,"18":0,"21":0,"22":0,"23":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"43":1,"44":1,"46":1,"47":0,"49":0,"50":0,"54":0,"55":0,"57":0,"58":0,"59":0,"60":0,"63":0,"65":0,"67":0,"68":0,"69":0,"73":1,"75":0,"78":1,"80":0,"82":0,"83":0,"84":0,"86":0,"87":0,"88":0,"90":0,"91":0,"92":0,"93":0,"96":0,"100":1,"101":0,"102":0,"103":0,"104":0,"107":1,"108":0,"109":0,"110":0,"113":0,"115":0,"116":0,"117":0,"120":0,"122":0,"123":0,"124":0,"125":0,"128":0}},"/home/travis/build/npmtest/node-npmtest-memcached/memcached/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-memcached/memcached/lib/utils.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":1,"61":11,"62":11,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":1,"74":0,"75":1,"76":0},"b":{"1":[0,0,0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":11,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"validateArg","line":6,"loc":{"start":{"line":6,"column":22},"end":{"line":6,"column":58}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":24},"end":{"line":9,"column":42}}},"3":{"name":"validateKeySize","line":89,"loc":{"start":{"line":89,"column":22},"end":{"line":89,"column":67}}},"4":{"name":"fuse","line":104,"loc":{"start":{"line":104,"column":15},"end":{"line":104,"column":48}}},"5":{"name":"merge","line":112,"loc":{"start":{"line":112,"column":16},"end":{"line":112,"column":45}}},"6":{"name":"curry","line":121,"loc":{"start":{"line":121,"column":16},"end":{"line":121,"column":45}}},"7":{"name":"bowlofcurry","line":125,"loc":{"start":{"line":125,"column":9},"end":{"line":125,"column":33}}},"8":{"name":"iterator","line":131,"loc":{"start":{"line":131,"column":19},"end":{"line":131,"column":60}}},"9":{"name":"next","line":139,"loc":{"start":{"line":139,"column":14},"end":{"line":139,"column":31}}},"10":{"name":"hasNext","line":145,"loc":{"start":{"line":145,"column":17},"end":{"line":145,"column":37}}},"11":{"name":"(anonymous_11)","line":151,"loc":{"start":{"line":151,"column":22},"end":{"line":151,"column":38}}},"12":{"name":"(anonymous_12)","line":156,"loc":{"start":{"line":156,"column":24},"end":{"line":156,"column":40}}},"13":{"name":"(anonymous_13)","line":160,"loc":{"start":{"line":160,"column":44},"end":{"line":160,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":41}},"2":{"start":{"line":6,"column":0},"end":{"line":87,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":10}},"4":{"start":{"line":9,"column":2},"end":{"line":79,"column":5}},"5":{"start":{"line":10,"column":4},"end":{"line":11,"column":26}},"6":{"start":{"line":13,"column":4},"end":{"line":78,"column":5}},"7":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"8":{"start":{"line":16,"column":10},"end":{"line":16,"column":64}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":14}},"10":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"11":{"start":{"line":23,"column":10},"end":{"line":23,"column":65}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":14}},"13":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"14":{"start":{"line":30,"column":10},"end":{"line":30,"column":63}},"15":{"start":{"line":32,"column":8},"end":{"line":42,"column":9}},"16":{"start":{"line":33,"column":10},"end":{"line":41,"column":11}},"17":{"start":{"line":34,"column":12},"end":{"line":34,"column":37}},"18":{"start":{"line":35,"column":12},"end":{"line":35,"column":63}},"19":{"start":{"line":36,"column":12},"end":{"line":40,"column":13}},"20":{"start":{"line":37,"column":14},"end":{"line":37,"column":31}},"21":{"start":{"line":39,"column":14},"end":{"line":39,"column":75}},"22":{"start":{"line":43,"column":8},"end":{"line":43,"column":14}},"23":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"24":{"start":{"line":47,"column":10},"end":{"line":47,"column":64}},"25":{"start":{"line":50,"column":8},"end":{"line":50,"column":14}},"26":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"27":{"start":{"line":54,"column":10},"end":{"line":54,"column":66}},"28":{"start":{"line":57,"column":8},"end":{"line":57,"column":14}},"29":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"30":{"start":{"line":61,"column":10},"end":{"line":61,"column":64}},"31":{"start":{"line":64,"column":8},"end":{"line":71,"column":9}},"32":{"start":{"line":65,"column":10},"end":{"line":65,"column":59}},"33":{"start":{"line":66,"column":10},"end":{"line":70,"column":11}},"34":{"start":{"line":67,"column":12},"end":{"line":67,"column":29}},"35":{"start":{"line":69,"column":12},"end":{"line":69,"column":87}},"36":{"start":{"line":72,"column":8},"end":{"line":72,"column":14}},"37":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"38":{"start":{"line":76,"column":10},"end":{"line":76,"column":57}},"39":{"start":{"line":81,"column":2},"end":{"line":84,"column":3}},"40":{"start":{"line":82,"column":4},"end":{"line":82,"column":53}},"41":{"start":{"line":82,"column":23},"end":{"line":82,"column":53}},"42":{"start":{"line":83,"column":4},"end":{"line":83,"column":17}},"43":{"start":{"line":86,"column":2},"end":{"line":86,"column":14}},"44":{"start":{"line":89,"column":0},"end":{"line":101,"column":2}},"45":{"start":{"line":90,"column":2},"end":{"line":100,"column":3}},"46":{"start":{"line":91,"column":4},"end":{"line":95,"column":5}},"47":{"start":{"line":92,"column":6},"end":{"line":92,"column":82}},"48":{"start":{"line":94,"column":6},"end":{"line":94,"column":113}},"49":{"start":{"line":96,"column":9},"end":{"line":100,"column":3}},"50":{"start":{"line":97,"column":4},"end":{"line":97,"column":77}},"51":{"start":{"line":99,"column":4},"end":{"line":99,"column":40}},"52":{"start":{"line":104,"column":0},"end":{"line":109,"column":2}},"53":{"start":{"line":105,"column":2},"end":{"line":108,"column":5}},"54":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"55":{"start":{"line":107,"column":6},"end":{"line":107,"column":32}},"56":{"start":{"line":112,"column":0},"end":{"line":118,"column":2}},"57":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"58":{"start":{"line":114,"column":4},"end":{"line":114,"column":23}},"59":{"start":{"line":117,"column":2},"end":{"line":117,"column":16}},"60":{"start":{"line":121,"column":0},"end":{"line":128,"column":2}},"61":{"start":{"line":122,"column":2},"end":{"line":123,"column":37}},"62":{"start":{"line":125,"column":2},"end":{"line":127,"column":4}},"63":{"start":{"line":126,"column":4},"end":{"line":126,"column":72}},"64":{"start":{"line":131,"column":0},"end":{"line":148,"column":2}},"65":{"start":{"line":132,"column":2},"end":{"line":136,"column":18}},"66":{"start":{"line":139,"column":2},"end":{"line":142,"column":4}},"67":{"start":{"line":140,"column":4},"end":{"line":140,"column":93}},"68":{"start":{"line":141,"column":4},"end":{"line":141,"column":45}},"69":{"start":{"line":145,"column":2},"end":{"line":147,"column":4}},"70":{"start":{"line":146,"column":4},"end":{"line":146,"column":27}},"71":{"start":{"line":151,"column":0},"end":{"line":153,"column":2}},"72":{"start":{"line":152,"column":2},"end":{"line":152,"column":43}},"73":{"start":{"line":156,"column":0},"end":{"line":158,"column":2}},"74":{"start":{"line":157,"column":2},"end":{"line":157,"column":43}},"75":{"start":{"line":160,"column":0},"end":{"line":164,"column":2}},"76":{"start":{"line":163,"column":2},"end":{"line":163,"column":33}}},"branchMap":{"1":{"line":13,"type":"switch","locations":[{"start":{"line":14,"column":6},"end":{"line":19,"column":14}},{"start":{"line":21,"column":6},"end":{"line":26,"column":14}},{"start":{"line":28,"column":6},"end":{"line":43,"column":14}},{"start":{"line":45,"column":6},"end":{"line":50,"column":14}},{"start":{"line":52,"column":6},"end":{"line":57,"column":14}},{"start":{"line":59,"column":6},"end":{"line":72,"column":14}},{"start":{"line":74,"column":6},"end":{"line":77,"column":9}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":8}},{"start":{"line":15,"column":8},"end":{"line":15,"column":8}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":8}},{"start":{"line":22,"column":8},"end":{"line":22,"column":8}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"6":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":16}},{"start":{"line":32,"column":20},"end":{"line":32,"column":33}}]},"7":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":12}},{"start":{"line":36,"column":12},"end":{"line":36,"column":12}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"9":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"10":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"11":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"12":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":16}},{"start":{"line":64,"column":20},"end":{"line":64,"column":33}}]},"13":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":10},"end":{"line":66,"column":10}},{"start":{"line":66,"column":10},"end":{"line":66,"column":10}}]},"14":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"15":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":54}},{"start":{"line":75,"column":58},"end":{"line":75,"column":68}}]},"16":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"17":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"18":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"19":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"20":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":9},"end":{"line":96,"column":9}},{"start":{"line":96,"column":9},"end":{"line":96,"column":9}}]},"21":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"22":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":20},"end":{"line":126,"column":27}},{"start":{"line":126,"column":31},"end":{"line":126,"column":35}}]},"23":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":20},"end":{"line":133,"column":43}},{"start":{"line":133,"column":46},"end":{"line":133,"column":51}}]},"24":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":22},"end":{"line":135,"column":39}},{"start":{"line":135,"column":42},"end":{"line":135,"column":53}}]},"25":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":20},"end":{"line":140,"column":37}},{"start":{"line":140,"column":40},"end":{"line":140,"column":92}}]}},"code":["\"use strict\";","","var createHash = require('crypto').createHash","  , toString = Object.prototype.toString;","","exports.validateArg = function validateArg (args, config) {","  var err;","","  args.validate.forEach(function (tokens) {","    var key = tokens[0]","      , value = args[key];","","    switch(tokens[1]){","      case Number:","        if (toString.call(value) !== '[object Number]') {","          err = 'Argument \"' + key + '\" is not a valid Number.';","        }","","        break;","","      case Boolean:","        if (toString.call(value) !== '[object Boolean]') {","          err = 'Argument \"' + key + '\" is not a valid Boolean.';","        }","","        break;","","      case Array:","        if (toString.call(value) !== '[object Array]') {","          err = 'Argument \"' + key + '\" is not a valid Array.';","        }","        if (!err && key === 'key') {","          for (var vKey=0; vKey<value.length; vKey++) {","            var vValue = value[vKey];","            var result = validateKeySize(config, vKey, vValue);","            if (result.err) {","              err = result.err;","            } else {","              args.command = args.command.replace(vValue, result['value']);","            }","          }","        }","        break;","","      case Object:","        if (toString.call(value) !== '[object Object]') {","          err = 'Argument \"' + key + '\" is not a valid Object.';","        }","","        break;","","      case Function:","        if (toString.call(value) !== '[object Function]') {","          err = 'Argument \"' + key + '\" is not a valid Function.';","        }","","        break;","","      case String:","        if (toString.call(value) !== '[object String]') {","          err = 'Argument \"' + key + '\" is not a valid String.';","        }","","        if (!err && key === 'key') {","          var result = validateKeySize(config, key, value);","          if (result.err) {","            err = result.err;","          } else {","            args.command = reallocString(args.command).replace(value, result['value']);","          }","        }","        break;","","      default:","        if (toString.call(value) === '[object global]' && !tokens[2]) {","          err = 'Argument \"' + key + '\" is not defined.';","        }","    }","  });","","  if (err){","    if (args.callback) args.callback(new Error(err));","    return false;","  }","","  return true;","};","","var validateKeySize = function validateKeySize(config, key, value) {","  if (value.length > config.maxKeySize) {","    if (config.keyCompression){","      return { err: false, value: createHash('md5').update(value).digest('hex') };","    } else {","      return { err: 'Argument \"' + key + '\" is longer than the maximum allowed length of ' + config.maxKeySize };","    }","  } else if (/[\\s\\n\\r]/.test(value)) {","    return { err: 'The key should not contain any whitespace or new lines' };","  } else {","    return { err: false, value: value };","  }","};","","// a small util to use an object for eventEmitter","exports.fuse = function fuse (target, handlers) {","  for (var i in handlers)","    if (handlers.hasOwnProperty(i)){","      target.on(i, handlers[i]);","    }","};","","// merges a object's proppertys / values with a other object","exports.merge = function merge (target, obj) {","  for (var i in obj) {","    target[i] = obj[i];","  }","","  return target;","};","","// curry/bind functions","exports.curry = function curry (context, fn) {","  var copy = Array.prototype.slice","    , args = copy.call(arguments, 2);","","  return function bowlofcurry () {","    return fn.apply(context || this, args.concat(copy.call(arguments)));","  };","};","","// a small items iterator","exports.Iterator = function iterator (collection, callback) {","  var arr = Array.isArray(collection)","    , keys = !arr ? Object.keys(collection) : false","    , index = 0","    , maximum = arr ? collection.length : keys.length","    , self = this;","","  // returns next item","  this.next = function next () {","    var obj = arr ? collection[index] : { key: keys[index], value: collection[keys[index]] };","    callback(obj, index++, collection, self);","  };","","  // check if we have more items","  this.hasNext = function hasNext () {","    return index < maximum;","  };","};","","//Escapes values by putting backslashes before line breaks","exports.escapeValue = function(value) {","  return value.replace(/(\\r|\\n)/g, '\\\\$1');","};","","//Unescapes escaped values by removing backslashes before line breaks","exports.unescapeValue = function(value) {","  return value.replace(/\\\\(\\r|\\n)/g, '$1');","};","","var reallocString = exports.reallocString = function(value) {","  // Reallocate string to fix slow string operations in node 0.10","  // see https://code.google.com/p/v8/issues/detail?id=2869 for details","  return (' ' + value).substr(1);","};",""],"l":{"3":1,"6":1,"7":0,"9":0,"10":0,"13":0,"15":0,"16":0,"19":0,"22":0,"23":0,"26":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"43":0,"46":0,"47":0,"50":0,"53":0,"54":0,"57":0,"60":0,"61":0,"64":0,"65":0,"66":0,"67":0,"69":0,"72":0,"75":0,"76":0,"81":0,"82":0,"83":0,"86":0,"89":1,"90":0,"91":0,"92":0,"94":0,"96":0,"97":0,"99":0,"104":1,"105":0,"106":0,"107":0,"112":1,"113":0,"114":0,"117":0,"121":1,"122":11,"125":11,"126":0,"131":1,"132":0,"139":0,"140":0,"141":0,"145":0,"146":0,"151":1,"152":0,"156":1,"157":0,"160":1,"163":0}}}